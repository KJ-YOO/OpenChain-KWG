<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OpenChain KWG – [2023] 기업 오픈소스 관리 가이드</title><link>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/</link><description>Recent content in [2023] 기업 오픈소스 관리 가이드 on OpenChain KWG</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/index.xml" rel="self" type="application/rss+xml"/><item><title>Guide: 1. 조직</title><link>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/1-teams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/1-teams/</guid><description>
&lt;p>먼저, 기업은 오픈소스 관리 업무를 담당할 조직을 구성해야 합니다.&lt;/p>
&lt;p>조직 구성 시 고려해야 할 내용은 다음과 같습니다:&lt;/p>
&lt;ul>
&lt;li>조직의 역할과 책임&lt;/li>
&lt;li>각 역할의 필요 역량&lt;/li>
&lt;li>각 역할을 담당할 조직/담당자&lt;/li>
&lt;/ul>
&lt;h2 id="1-조직의-역할과-책임-정의">1. 조직의 역할과 책임 정의&lt;/h2>
&lt;p>ISO 표준은 공통적으로 다음과 같이 프로그램의 여러 참여자의 역할과 각 역할의 책임을 나열한 문서를 요구합니다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.1.2.1 - A documented list of roles with corresponding responsibilities for the different participants in the program.&lt;br>
&lt;code>프로그램의 여러 참여자에 대한 역할과 각 역할의 책임을 나열한 문서&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
&lt;ul>
&lt;li>3.1.2.1: A documented list of roles with corresponding responsibilities for the different Program Participants&lt;br>&lt;code>여러 프로그램 참여자에 대한 각각의 책임을 나열한 문서&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>기업의 오픈소스 관리 체계를 구축하기 위해서는 먼저 이를 책임지고 수행할 책임자가 필요합니다. 책임자는 &lt;code>오픈소스 프로그램 매니저&lt;/code> 또는 &lt;code>오픈소스 컴플라이언스 담당자&lt;/code> 등의 명칭으로 불리며, 여기서는 &lt;code>오픈소스 프로그램 매니저&lt;/code>라는 용어를 사용합니다.&lt;/p>
&lt;p>오픈소스 프로그램 매니저는 기업의 오픈소스 프로그램 오피스를 담당합니다.&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>오픈소스 프로그램 오피스&lt;/code>란 기업의 오픈소스 관리를 위한 조직을 의미하며, &lt;code>오픈소스 사무국&lt;/code>이라는 용어로도 사용됩니다.&lt;/p>
&lt;/blockquote>
&lt;p>아래의 역량을 가지고 있다면 오픈소스 프로그램 매니저 역할에 적합하다고 할 수 있습니다.&lt;/p>
&lt;ul>
&lt;li>오픈소스 생태계에 대한 이해 및 개발 경험&lt;/li>
&lt;li>기업의 비즈니스에 대한 폭넓은 이해&lt;/li>
&lt;li>기업 구성원에게 효과적인 오픈소스 활용을 전파할 수 있는 열정과 커뮤니케이션 능력&lt;/li>
&lt;/ul>
&lt;p>오픈소스 프로그램 매니저는 가능한 풀타임으로 역할을 수행할 수 있도록 보장되는 것이 좋습니다.&lt;/p>
&lt;p>글로벌 ICT 기업은 이와 같은 우수한 오픈소스 프로그램 매니저를 채용하기 위해 노력하고 있습니다. 다음 사이트에서 다양한 채용 공고를 확인할 수 있습니다. : &lt;a href="https://github.com/todogroup/job-descriptions">https://github.com/todogroup/job-descriptions&lt;/a>&lt;/p>
&lt;p>기업은 오픈소스 프로그램 오피스에 필요한 각 역할을 정의하고, 어떠한 책임을 부여해야 하는지를 판단해야 합니다. 소규모 기업의 경우, 오픈소스 프로그램 매니저 혼자서 모든 역할을 수행하는 것도 가능합니다. 기업의 규모에 따라 오픈소스 도구를 운영하는 IT 담당자도 필요할 수 있으며, 전문적인 법무 자문을 제공하기 위한 법무 담당의 역할이 요구될 수도 있습니다.&lt;/p>
&lt;p>일반적으로 기업의 오픈소스 관리 체계 구축을 위해서는 아래의 역할이 필요합니다.&lt;/p>
&lt;ul>
&lt;li>법무 담당&lt;/li>
&lt;li>IT 담당&lt;/li>
&lt;li>보안 담당&lt;/li>
&lt;li>개발 문화 담당&lt;/li>
&lt;/ul>
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 543px">
&lt;img class="card-img-top" src="https://openChain-project.github.io/OpenChain-KWG/OpenChain-KWG/guide/opensource_for_enterprise/1-teams/complianceofficer_hub381da67a0457ff40be51fb508361881_139738_900x600_fit_catmullrom_2.png" width="533" height="434">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;center>&lt;i>Individuals and teams involved in ensuring open source compliance : https://www.linuxfoundation.org/wp-content/uploads/OpenSourceComplianceHandbook_2018_2ndEdition_DigitalEdition.pdf&lt;/i>&lt;/center>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;p>이를 위해 기업은 아래와 같이 오픈소스 프로그램 오피스를 구성하는 역할과 책임을 문서화해야 합니다.&lt;/p>
&lt;p>&lt;img src="./roles_responsibilities.png" alt="">&lt;/p>
&lt;center>&lt;i>&lt;샘플> 역활과 책임 문서화&lt;/i>&lt;/center>&lt;br>
&lt;h2 id="2-필요-역량-정의">2. 필요 역량 정의&lt;/h2>
&lt;p>각 역할과 그에 대한 책임을 정의하였다면, 그 역할을 수행할 인원이 갖춰야 할 필수 역량이 무엇인지 파악해야 합니다. 이를 통해 역할별 담당자가 해당 역할을 수행할 수 있는 역량을 갖추었는지 평가하고, 필요시 교육을 제공해야 하기 때문입니다.&lt;/p>
&lt;p>ISO 표준은 공통적으로 다음과 같이 각 역할을 위해 필요한 역량을 기술한 문서를 요구합니다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.1.2.2 - A document that identifies the competencies for each role.&lt;br>&lt;code>각 역할을 위해 필요한 역량을 기술한 문서&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
&lt;ul>
&lt;li>3.1.2.2: A document that identifies the competencies for each role.&lt;br>&lt;code>각 역할을 위해 필요한 역량을 기술한 문서&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>이를 위해 기업은 아래와 같이 각 역할을 위해 필요한 역량을 기술하여 문서화해야 합니다.&lt;/p>
&lt;p>&lt;img src="./competency.jpg" alt="">&lt;/p>
&lt;center>&lt;i>&lt;샘플> 역할 별 필요 역량&lt;/i>&lt;/center>&lt;br>
&lt;h2 id="3-담당자-지정">3. 담당자 지정&lt;/h2>
&lt;p>오픈소스 프로그램 매니저는 관련 부서와 협의하여 각 역할을 위한 담당자를 지정하고 이를 문서화합니다. 물론 이를 위해서는 CEO 등 최고 의사결정권자에게 오픈소스 컴플라언스 체계 구축을 위한 목표와 방향을 보고하여 필요한 지원을 받아야 할 것입니다.&lt;/p>
&lt;p>오픈소스 관련 조직과 담당자는 반드시 풀타임으로 오픈소스 업무에 참여할 필요는 없습니다. OSRB (Open Source Review Board) 형태의 가상 조직을 구성하여 필요한 역할을 수행하면 됩니다.&lt;/p>
&lt;p>이를 위해 ISO 표준은 공통적으로 다음과 같이 프로그램 내 각 역할을 담당하는 인원, 그룹 또는 직무의 이름을 기재한 문서를 요구합니다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.2.2.1 - Document with name of persons, group or function in program role(s) identified.&lt;br>&lt;code>프로그램 내 각 역할을 담당하는 인원, 그룹 또는 직무의 이름을 기재한 문서 &lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
&lt;ul>
&lt;li>3.1.2.3: List of participants and their roles&lt;br>&lt;code>참여자 명단과 그들의 역할&lt;/code>&lt;/li>
&lt;li>3.2.2.1: Document with name of persons, group or function in Program role(s) identified&lt;br>&lt;code>프로그램 내 각 역할을 담당하는 인원, 그룹 또는 직무의 이름을 기재한 문서&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>이를 위해 기업은 아래와 같이 프로그램 내 각 역할을 담당하는 인원, 그룹 또는 직무의 이름을 문서화해야 합니다.&lt;/p>
&lt;p>&lt;img src="./personincharge.jpg" alt="">&lt;/p>
&lt;center>&lt;i>&lt;샘플> 담당자 지정&lt;/i>&lt;/center>&lt;br>
&lt;p>SK텔레콤은 &lt;a href="https://sktelecom.github.io/about/osrb/">OSRB&lt;/a>를 구성하여 기업 내 오픈소스 정책과 프로세스를 만들고, 이슈 발생 시 대응 방안을 마련하고 있습니다.&lt;/p>
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 471px">
&lt;img class="card-img-top" src="https://openChain-project.github.io/OpenChain-KWG/OpenChain-KWG/guide/opensource_for_enterprise/1-teams/sktosrb_hudb2d30eec1b89635a12caf266f1f24ba_65832_600x300_fit_catmullrom_2.png" width="461" height="300">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;center>&lt;i>https://sktelecom.github.io/about/osrb/&lt;/i>&lt;/center>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;h2 id="4-summary">4. Summary&lt;/h2>
&lt;p>역할, 책임, 필요 역량 및 담당자 지정을 문서화한 샘플은 Appendix 1. 오픈소스 정책에서 확인할 수 있습니다. : 담당자 현황&lt;/p>
&lt;p>기업은 이를 참고하여 기업의 상황에 맞게 오픈소스 프로그램 오피스를 구성하여 문서화하십시오.&lt;/p>
&lt;p>이렇게 오픈소스 프로그램 오피스 조직을 지정하고 문서화하면, ISO 표준 규격 중 아래의 붉은색으로 표시된 요구사항을 충족할 수 있습니다.&lt;/p>
&lt;p>&lt;img src="./spec_number_01.png" alt="">&lt;/p>
&lt;p>사실, 문서화하는 것보다 실제 업무를 충실히 수행할 담당자를 지정하고, 담당자가 역량을 확보할 수 있도록 지원하는 것이 더 중요합니다.&lt;/p>
&lt;p>한국저작권위원회의 &lt;a href="https://www.olis.or.kr/consulting/openswStudyDetail.do?seq=463">오픈소스 라이선스 전문 교육&lt;/a>이나 &lt;a href="https://www.oss.kr/oss_data/show/448d2e96-6819-45f4-b114-73cd41b3e9d3">NIPA의 공개소프트웨어 매니지먼트 아카데미&lt;/a>에 참여하여 체계적인 교육을 수강하는 것도 매우 도움이 됩니다.&lt;/p></description></item><item><title>Guide: 2. 정책</title><link>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/2-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/2-policy/</guid><description>
&lt;h2 id="1-오픈소스-정책-문서화">1. 오픈소스 정책 문서화&lt;/h2>
&lt;p>기업은 소프트웨어 개발, 서비스, 배포에 관여하는 조직이 올바르게 오픈소스를 활용하기 위한 원칙으로 구성된 오픈소스 정책을 수립하여 문서화하고 이를 조직 내 전파해야 합니다.&lt;/p>
&lt;p>이를 위해 ISO 표준은 공통적으로 다음과 같이 문서화된 오픈소스 (보안 보증) 정책을 요구합니다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.1.1.1 - A documented open source policy.&lt;br>&lt;code>문서화된 오픈소스 정책&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
&lt;ul>
&lt;li>3.1.1.1: A documented Open Source Software Security Assurance policy &lt;br>&lt;code>문서화된 오픈소스 소프트웨어 보안 보증 정책&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>일반적인 오픈소스 정책은 다음을 포함합니다. 기업은 이러한 원칙을 포함한 오픈소스 정책을 만들어서 문서화해야 합니다.&lt;/p>
&lt;ul>
&lt;li>오픈소스를 사용하여 소프트웨어 제품과 서비스를 만들어서 배포하기 위한 원칙&lt;/li>
&lt;li>외부 오픈소스 커뮤니티에 기여하기 위한 원칙&lt;/li>
&lt;li>기업의 소프트웨어를 오픈소스로 공개하기 위한 원칙&lt;/li>
&lt;/ul>
&lt;p>다음 페이지에서 ISO/IEC 5230과 ISO/IEC DIS 18974의 요구사항을 충족하는 샘플 오픈소스 정책 문서를 제공합니다. : &lt;a href="../">[부록1] 오픈소스 정책 (샘플)&lt;/a>&lt;/p>
&lt;p>&lt;img src="samplepolicy.png" alt="">&lt;/p>
&lt;center>&lt;i>&lt;샘플> 오픈소스 정책&lt;/i>&lt;/center>&lt;br>
&lt;h2 id="2-적용-범위-지정">2. 적용 범위 지정&lt;/h2>
&lt;p>하나의 오픈소스 정책(프로그램)을 반드시 전체 조직에 적용해야 하는 것은 아닙니다. 기업 내 각 조직과 제품의 특성에 따라 적용 범위를 달리 지정할 수 있습니다. 예를 들어, 소프트웨어를 전혀 배포하지 않는 조직은 오픈소스 프로그램의 적용 범위에서 제외할 수 있습니다. 이와 같이 기업은 조직과 제품의 특성을 고려하여 오픈소스 프로그램의 적용 범위와 한계를 명확히 정의하고, 이를 오픈소스 정책에 명시해야 합니다.&lt;/p>
&lt;p>또한, 비즈니스 환경에 맞추어 변화함에 따라 조직 구조, 제품 및 서비스가 프로그램의 적용 범위를 결정하거나 수정해야 하는 상황이 발생할 수 있습니다. 기업은 이에 대응하여 적용 범위를 평가하기 위한 측정 기준을 수립하고, 지속적인 개선을 위해 검토, 업데이트 또는 검사를 수행해야 하며, 이를 문서화해야 합니다.&lt;/p>
&lt;p>이를 위해 ISO 표준은 공통적으로 다음과 같이 프로그램의 적용 범위와 한계를 명확하게 정의한 문서화된 진술 등을 요구합니다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.1.4.1 - A written statement that clearly defines the scope and limits of the program. &lt;br>&lt;code>프로그램의 적용 범위와 한계를 명확하게 정의한 문서화된 진술&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
&lt;ul>
&lt;li>3.1.4.1: A written statement that clearly defines the scope and limits of the Program &lt;br>&lt;code>프로그램의 적용 범위와 한계를 명확하게 정의한 문서화된 진술&lt;/code>&lt;/li>
&lt;li>3.1.4.2: A set of metrics the program shall achieve to improve&lt;br>&lt;code>프로그램 개선을 위해 달성해야 하는 일련의 측정 기준&lt;/code>&lt;/li>
&lt;li>3.1.4.3: Documented Evidence from each review, update, or audit to demonstrate continuous improvement.&lt;br>&lt;code>지속적인 개선을 위해 검토, 업데이트 또는 검사를 수행했음을 입증하는 문서화된 증거&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>이를 위해 기업은 아래와 같이 오픈소스 정책에 다음과 같이 적용 범위에 대해 명확히 정의하고, 활동 이력을 문서화하는 체계를 갖춰야 한다.&lt;/p>
&lt;pre>&lt;code>1. 적용 범위
이 정책은 다음 세 부분에 적용됩니다.
1. 회사가 외부로 제공하거나 배포하는 모든 제품에 적용됩니다. 단, 오픈소스를 내부 사용 목적으로만 사용하는 것은 이 정책의 범위에 포함되지 않습니다.
2. 구성원이 외부 오픈소스 프로젝트에 기여할 때 적용됩니다.
3. 내부 코드를 오픈소스로 공개할 때 적용됩니다.
적용 범위는 회사의 비즈니스 환경에 맞추어 변경할 수 있습니다. 특히, 오픈소스 프로그램 매니저는 지속적인 효과를 보장하기 위해 이 정책의 적용되지 않고 사외로 배포 혹은 서비스되는 제품이 있는지 월 1회 이상 조사합니다. 이를 측정하여 1건이라도 발견 시 적용 범위를 변경해야 하는 기준으로 삼습니다.
적용 범위를 변경하기 위한 절차는 다음과 같습니다.
1. 오픈소스 프로그램 매니저는 신규사업, 조직개편 등 회사의 비즈니스 환경이 변화에 따라 정책의 적용 범위 변경이 필요하다고 판단할 경우, 이를 위한 제안을 OSRB에 제출합니다.
2. OSRB에서는 적절한 수준의 적용 범위 변경을 승인합니다.
3. OSRB는 오픈소스 정책을 수정하여 정책의 적용 범위를 변경합니다.
오픈소스 프로그램 매니저는 지속적으로 월 1회 이상 적용 범위를 개선하기 위해 검토, 업데이트 및 검사 이력을 Jira Issue Tracker를 활용하여 문서화합니다.
&lt;/code>&lt;/pre>&lt;p>따라서 기업은 오픈소스 정책에 다음과 같이 적용 범위를 명확히 정의하고, 활동 이력을 문서화하는 체계를 갖춰야 합니다.&lt;/p>
&lt;h2 id="3-외부-문의-대응-담당자-지정--연락처-공개">3. 외부 문의 대응 담당자 지정 / 연락처 공개&lt;/h2>
&lt;p>오픈소스를 사용하여 개발한 제품 또는 서비스에 대해 고객 및 오픈소스 저작권자가 기업에 오픈소스 관련 문의, 요청 및 클레임을 제기하는 경우가 있습니다. 외부 문의 및 요청의 주된 내용은 다음과 같습니다.&lt;/p>
&lt;ul>
&lt;li>특정 제품 또는 서비스에 오픈소스가 사용되었는지 문의&lt;/li>
&lt;li>서면 약정(Written Offer)에 언급된 GPL, LGPL 라이선스 하의 소스 코드 제공 요청&lt;/li>
&lt;li>오픈소스 고지문에 명시되지 않았지만, 제품에서 발견된 오픈소스에 대한 해명 및 소스 코드 공개 요청&lt;/li>
&lt;li>GPL, LGPL 등의 의무로 공개된 소스 코드에 누락된 파일 및 빌드 방법 제공 요청&lt;/li>
&lt;li>저작권 표시 요청&lt;/li>
&lt;/ul>
&lt;p>기업은 이러한 외부 문의를 처리할 담당자를 지정해야 합니다. 일반적으로 오픈소스 프로그램 매니저가 담당합니다.&lt;/p>
&lt;p>외부의 오픈소스 개발자가 특정 기업의 오픈소스 컴플라이언스 관련 이슈를 논의하기 위해 기업 담당자에게 연락하고 싶어도 연락 방법을 찾지 못하다가 결국 바로 법적 클레임을 제기하는 경우가 있습니다. 이를 방지하기 위해 기업은 제3자가 기업에 오픈소스 관련하여 문의 및 요청을 할 수 있는 연락 방법을 항시 공개적으로 밝혀야 합니다.&lt;/p>
&lt;p>이를 위해 ISO 표준은 공통적으로 다음과 같이 제3자가 오픈소스에 대해 문의할 수 있는 공개된 방법을 요구합니다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.2.1.1 - Publicly visible method that allows any third party to make an open source license compliance inquiry (e.g., via a published contact email address, or the Linux Foundation&amp;rsquo;s Open Compliance Directory).&lt;br>&lt;code>제 3자가 오픈소스 라이선스 컴플라이언스에 대해 문의 할 수 있는 공개된 방법 (담당자 이메일 주소, 또는 Linux Foundation의 Open Compliance Directory 활용 등)&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
&lt;ul>
&lt;li>3.2.1.1: Publicly visible method to allow third parties to make Known Vulnerability or Newly Discovered Vulnerability enquires (e.g., via an email address or web portal that is monitored by Program Participants)&lt;br>&lt;code>제3자가 알려진 취약점 또는 새로 발견된 취약점에 대해 문의할 수 있는 공개된 방법 (예: 이메일 주소 또는 프로그램 참여자가 모니터링하는 웹 포털)&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>외부에서 기업에 오픈소스 관련 문의를 할 수 있는 연락 방법은 다음과 같습니다.&lt;/p>
&lt;ol>
&lt;li>기업의 오픈소스 프로그램 사무소의 대표 이메일 주소를 공개합니다.&lt;/li>
&lt;li>Linux Foundation의 &lt;a href="https://compliance.linuxfoundation.org/references/open-compliance-directory/">Open Compliance Directory&lt;/a>를 이용합니다.&lt;/li>
&lt;li>기업의 오픈소스 웹사이트가 있다면 이를 통해 이메일 주소를 공개합니다.&lt;/li>
&lt;/ol>
&lt;p>기업의 오픈소스 프로그램 사무소의 대표 이메일 주소는 제품 및 서비스와 동봉하는 오픈소스 고지문에 포함하여 공개하는 것도 좋은 방법입니다.&lt;/p>
&lt;p>이를 위해 기업은 아래의 예시와 같이 오픈소스 정책에 외부 문의 대응에 대한 내용을 반영할 수 있습니다.&lt;/p>
&lt;pre>&lt;code>9. 외부 문의 대응
(1) 외부 문의 대응 책임
외부로부터 오픈소스에 대한 문의 및 요청에 대한 대응은 오픈소스 프로그램 매니저가 담당합니다.
- 오픈소스 프로그램 매니저는 회사 내의 적절한 인원에게 문의에 대한 전체 또는 일부의 처리를 할당할 수 있습니다. 필요할 경우 법률 담당자에게 문의하여 처리합니다.
- 외부로부터 오픈소스에 대한 문의를 받은 사람은 누구나 이를 오픈소스 프로그램 매니저에게 알려서 신속한 대응이 될 수 있게 합니다.
(2) 연락처 공개
오픈소스 프로그램 매니저는 외부에서 오픈소스 관련한 문의 및 요청을 할 수 있도록 담당자의 연락처를 공개적으로 제공합니다.
- 오픈소스 고지문에 연락받을 수 있는 이메일 주소 정보를 제공합니다.
- 오픈소스 웹사이트에 이메일 주소 정보를 제공합니다.
- Linux Foundation의 Open Compliance Directory에 연락처를 등록합니다.
(3) 외부 문의 대응 절차
외부로부터의 오픈소스 문의에 신속하고 정확하게 대응한다면 클레임이나 법적 소송 위험을 크게 줄일 수 있습니다. 이를 위해 회사는 외부의 오픈소스 문의에 대응하기 위해 회사의 오픈소스 프로세스에서 정의한 외부 문의 대응 절차를 준수합니다.
&lt;/code>&lt;/pre>&lt;p>SK텔레콤은 모든 제품에 오픈소스 고지문을 포함하고 있습니다. 오픈소스 고지문에는 SK텔레콤 오픈소스 웹사이트 주소와 오픈소스 프로그램 오피스로 연락할 수 있는 메일 주소가 함께 제공됩니다.&lt;/p>
&lt;p>&lt;img src="./ossnotice.png" alt="">&lt;/p>
&lt;center>&lt;i>SK텔레콤 오픈소스 고지문&lt;/i>&lt;/center>&lt;br>
&lt;p>또한, &lt;a href="https://sktelecom.github.io/">SK텔레콤 오픈소스 웹사이트&lt;/a>에서도 오픈소스 프로그램 오피스로 연락할 수 있는 메일 주소를 제공하고 있습니다.&lt;/p>
&lt;p>&lt;img src="./website_email.jpg" alt="">&lt;/p>
&lt;center>&lt;i>SK텔레콤 오픈소스 웹사이트&lt;/i>&lt;/center>&lt;br>
&lt;h2 id="4-인원-예산-등-지원">4. 인원, 예산 등 지원&lt;/h2>
&lt;p>기업은 오픈소스 프로그램이 원활하게 기능을 수행할 수 있도록 충분한 리소스를 제공해야 합니다. 프로그램 내 각 역할을 담당하는 인원을 적합하게 배치하고, 충분한 예산과 업무 시간을 보장해야 합니다. 그렇지 않을 경우, 이를 보완할 수 있는 절차가 마련되어야 합니다.&lt;/p>
&lt;p>이를 위해 ISO 표준은 공통적으로 다음과 같이 프로그램 내 각 역할을 담당하는 인원이 적합하게 배치되고, 예산이 적절하게 지원되어야 함을 요구합니다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.2.2.2 - The identified program roles have been properly staffed and adequate funding provided.&lt;br>&lt;code>프로그램 내 각 역할을 담당하는 인원이 적합하게 배치되고, 예산이 적절하게 지원되어야 한다. &lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
&lt;ul>
&lt;li>3.2.2.2: The identified Program roles have been properly staffed and adequate funding provided;&lt;br>&lt;code>프로그램 내 각 역할을 담당하는 인원이 적합하게 배치되고, 예산이 적절하게 지원되어야 한다.&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>이를 위해 기업은 아래의 예시와 같이 오픈소스 정책에 인원, 예산 지원에 대한 내용을 반영할 수 있습니다.&lt;/p>
&lt;pre>&lt;code>4. 역할, 책임 및 역량
각 역할에 대한 담당 조직의 장은 조직 내 담당자를 지정하고, 담당자가 역할을 충실하게 수행할 수 있는 적절한 시간과 예산을 할당합니다.
- 각 역할의 담당자는 자신이 역할을 수행하면서 적절한 지원이 되지 않는다면 오픈소스 프로그램 매니저에게 문제를 제기해야 합니다.
- 오픈소스 프로그램 매니저는 해당 조직장과 문제 해결을 논의합니다. 적절하게 해결되지 않는다면, 오픈소스 프로그램 매니저는 OSRB에 문제 해결을 요청할 수 있습니다.
- OSRB는 상위 조직의 장에게 문제를 공유하고 해결을 요청합니다.
&lt;/code>&lt;/pre>&lt;h2 id="5-자문-제공">5. 자문 제공&lt;/h2>
&lt;p>기업은 각 역할의 담당자가 오픈소스 이슈를 해결하기 위해 전문적인 검토가 필요할 경우, 이에 대한 자문을 요청할 수 있는 방법을 제공해야 합니다.&lt;/p>
&lt;ul>
&lt;li>컴플라이언스 이슈에 대해서는 회사 내의 법무팀을 통해 우선 담당하고, 이슈가 첨예한 경우, 오픈소스 전문 변호사를 보유한 외부 법무 법인을 이용할 수 있습니다.&lt;/li>
&lt;li>보안 취약점 이슈에 대해서는 회사 내 보안팀에서 우선 담당하고, 이슈가 복잡하고 첨예한 경우, 외부 보안 전문 기술 업체에 자문을 요청할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;p>이를 위해 ISO 표준은 공통적으로 다음과 같이 문제 해결을 위해 내부 또는 외부의 전문 자문을 이용할 수 있는 방법을 요구합니다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.2.2.3 - Identification of legal expertise available to address open source license compliance matters which could be internal or external. &lt;br>&lt;code>오픈소스 라이선스 컴플라이언스 문제 해결을 위해 내부 또는 외부의 전문 법률 자문을 이용할 수 있는 방법&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
&lt;ul>
&lt;li>3.2.2.3: Identification of expertise available to address identified Known Vulnerabilities&lt;br>&lt;code>식별된 알려진 취약점을 해결을 위해 전문 기술 자문을 이용할 수 있는 방법&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>이를 위해 기업은 아래의 예시와 같이 오픈소스 정책에 자문을 제공하기 위한 내용을 반영할 수 있다.&lt;/p>
&lt;pre>&lt;code>4. 역할, 책임 및 역량
(4) 법무 담당
법무 담당은 오픈소스 라이선스와 의무를 해석하는 등 오픈소스 활용 과정에서 발생할 수 있는 법적 위험과 완화 방안에 대한 자문을 제공합니다.
- 구성원이 오픈소스 컴플라이언스 이슈에 대한 문의를 할 수 있는 합리적인 방법을 제공합니다.
- 호환되지 않는 오픈소스 라이선스로 인한 충돌을 포함하여 라이선스 및 지식재산권 문제에 대해 자문을 제공합니다.
- 외부 오픈소스 프로젝트로의 기여 시 오픈소스 라이선스, CLA(Contributor License Agreement) 등 필요한 법적 사항을 검토합니다.
- 이슈가 첨예한 경우, 오픈소스 전문 변호사를 보유한 외부 법무 법인에 자문을 요청합니다.
(6) 보안 담당
보안 담당은 오픈소스 보안 취약점 분석 도구를 운영하여 모든 배포용 소프트웨어에 대해 보안 취약점 분석이 원활히 수행되도록 시스템을 구축합니다.
- 오픈소스 보안 보증을 성공할 수 있도록 각 업무에 대한 책임을 할당합니다.
- 오픈소스 보안 취약점 분석 도구를 운영합니다.
- DevSecOps 환경과 통합하여 오픈소스 보안 취약점 분석을 자동화합니다.
- 모든 배포용 소프트웨어를 대상으로 오픈소스 보안 취약점 분석이 수행되도록 시스템과 프로세스를 구축합니다.
- 구성원이 보안 취약점에 대한 문의를 할 수 있는 합리적인 방법을 제공하고, 취약점 해결을 위해 필요 시 외부 전문 기술 자문을 이용합니다.
&lt;/code>&lt;/pre>&lt;p>참고로, OpenChain 프로젝트에서는 파트너 프로그램을 통해 오픈소스 관련 자문을 제공하는 글로벌 법무법인 리스트를 제공합니다. : &lt;a href="https://www.openchainproject.org/partners">https://www.openchainproject.org/partners&lt;/a>&lt;/p>
&lt;p>OpenChain 파트너로 등록된 법무법인은 OpenChain 프로젝트에서 요구하는 요건을 충족한 곳들이며, 대한민국에서는 유일하게 법무법인 태평양이 등록되어 있습니다.&lt;/p>
&lt;h2 id="6-내부-책임-할당-절차">6. 내부 책임 할당 절차&lt;/h2>
&lt;p>오픈소스 관리를 위한 내부 책임을 할당하는 절차가 있어야 한다. 이는 오픈소스 프로그램 매니저의 역할이다. 오픈소스 프로그램 매니저는 이슈를 파악하고 각 역할의 담당자에게 적절히 이슈를 할당해야 한다.&lt;/p>
&lt;p>이를 위해 ISO 표준은 공통적으로 다음과 같이 내부 책임을 할당하는 문서화된 절차를 요구한다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.2.2.4 - A documented procedure that assigns internal responsibilities for open source compliance.&lt;br>&lt;code>오픈소스 컴플라이언스에 대한 내부 책임을 할당하는 문서화된 절차 &lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
&lt;ul>
&lt;li>3.2.2.4: A documented procedure that assigns internal responsibilities for Security Assurance.&lt;br>&lt;code>보안 보증에 대한 내부 책임을 할당하는 문서화된 절차&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>이를 위해 기업은 아래의 예시와 같이 오픈소스 정책에 내부 책임을 할당하는 문서화된 절차를 반영할 수 있다.&lt;/p>
&lt;pre>&lt;code>
4. 역할, 책임 및 역량
(2) 오픈소스 프로그램 매니저
- 오픈소스 컴플라이언스를 위해 필요한 역할을 정의하고, 각 역할을 책임질 담당 조직 및 담당자를 지정하며, 필요 시 OSRB와 협의한다. 오픈소스 보안 보증을 위한 내부 책암은 보안 담당이 할당한다.
(6) 보안 담당
- 오픈소스 보안 보증을 성공할 수 있도록 각 업무에 대한 책임을 할당한다.
&lt;/code>&lt;/pre>&lt;h2 id="7-미준수-사례-대응">7. 미준수 사례 대응&lt;/h2>
&lt;p>기업은 컴플라이언스 미준수 사례를 신속히 검토하고 대응하기 위한 절차를 문서화해야 한다.&lt;/p>
&lt;p>이를 위해 ISO/IEC 5230은 다음과 같이 내부 책임을 할당하는 문서화된 절차를 요구한다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.2.2.5 - A documented procedure for handling the review and remediation of non-compliant cases.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>이를 위해 기업은 아래의 예시와 같이 오픈소스 정책에 미준수 사례를 검토하고 이를 수정하기 위한 문서화된 절차를 반영할 수 있다.&lt;/p>
&lt;pre>&lt;code>
6. 오픈소스 사용
(5) 컴플라이언스 이슈 대응 절차
컴플라이언스 이슈가 제기될 경우, 오픈소스 프로그램 매니저는 다음의 절차를 수행하여 신속히 대응합니다.
1. 문의 접수를 확인하고 적절한 해결 시간을 명시합니다.
2. 이슈 내용이 실제 문제를 지적하고 있는지를 확인합니다. (아닐 경우, 이슈 제기자에게 문제가 아님을 알립니다.)
3. 실제 문제인 경우, 우선순위를 정하고 적절한 대응 방안을 결정합니다.
4. 대응을 수행하고, 필요할 경우, 오픈소스 프로세스를 적절하게 보완합니다.
5. 위의 내용은 Jira Tracker를 이용하여 보존합니다.
&lt;/code>&lt;/pre>&lt;h2 id="8-오픈소스-기여-정책">8. 오픈소스 기여 정책&lt;/h2>
&lt;p>글로벌 소프트웨어 기업들은 제품을 만들고 서비스를 제공하는 데 오픈소스를 사용하는 것뿐만 아니라 오픈소스 프로젝트에 기여하고 창출할 수 있는 전략적 가치도 중요시합니다. 그러나 오픈소스 프로젝트 생태계와 커뮤니티 운영 방식에 대한 충분한 이해와 전략 없이 접근한다면 예기치 않게 회사의 명성이 손상되고 법적 위험이 발생할 수 있습니다. 따라서 기업은 오픈소스 프로젝트에 참여하고 기여하기 위한 전략과 정책을 수립하는 것이 중요합니다.&lt;/p>
&lt;p>이를 위해 ISO/IEC 5230은 다음과 같이 문서화된 오픈소스 기여 정책을 요구합니다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.5.1.1 - A documented open source contribution policy&lt;br>&lt;code>문서화된 오픈소스 기여 정책&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>이러한 오픈소스 기여에 대한 정책은 &lt;a href="../7-policy-template/#7-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EA%B8%B0%EC%97%AC">[부록1] 샘플 오픈소스 정책의 7. 오픈소스 기여&lt;/a> 부분을 참고할 수 있습니다.&lt;/p>
&lt;p>&lt;img src="samplecontribution.png" alt="">&lt;/p>
&lt;center>&lt;i>&lt;샘플> 오픈소스 기여 정책&lt;/i>&lt;/center>&lt;br>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>오픈소스 정책을 문서화하는 것은 효과적인 오픈소스 관리를 위해 가장 중요한 과정입니다. 위의 내용을 참고하여 각 요구사항을 회사의 상황에 맞게 적절한 원칙을 수립하는 것이 중요합니다. 또한 문서로만 그치지 않고, 실행 가능한 절차까지 고려해야 합니다. 말뿐인 정책은 소용이 없습니다.&lt;/p>
&lt;p>이렇게 오픈소스 프로그램 오피스 조직을 지정하고 문서화하면, ISO 표준 규격 중 아래의 녹색으로 표시된 요구사항을 충족할 수 있습니다.&lt;/p>
&lt;p>&lt;img src="./spec_number_02.png" alt="">&lt;/p></description></item><item><title>Guide: 3. 프로세스</title><link>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/3-process/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/3-process/</guid><description>
&lt;p>오픈소스 프로세스는 소프트웨어 개발 / 배포 과정에서 기업이 오픈소스 정책을 준수할 수 있게 하는 실행 가능한 절차이다. 오픈소스 컴플라이언스 측면에서는 소프트웨어를 개발하고 배포하면서 사용한 오픈소스에 대해 각 라이선스가 요구하는 조건을 준수하기 위한 활동을 수행하여 오픈소스 고지문(Notice), 공개할 소스 코드 (Source Code) 등의 산출물을 생성하게 된다.
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 702px">
&lt;img class="card-img-top" src="https://openChain-project.github.io/OpenChain-KWG/OpenChain-KWG/guide/opensource_for_enterprise/3-process/input_hu6fb1167426b664b7db45fb3de90029fd_53101_900x600_fit_catmullrom_2.png" width="692" height="176">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;center>&lt;i>Simplified view of the compliance end-to-end process : https://www.linuxfoundation.org/wp-content/uploads/OpenSourceComplianceHandbook_2018_2ndEdition_DigitalEdition.pdf&lt;/i>&lt;/center>
&lt;/p>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>오픈소스 보안 보증을 위해서는 배포용 소프트웨어에 대한 보안 취약점 존재 여부를 탐지하고 구조적 / 기술적 위협을 식별하여 출시 전에 문제를 해결하기 위한 활동을 수행해야 한다.&lt;/p>
&lt;p>아래의 이미지는 기업이 일반적으로 채택하여 사용할 수 있는 샘플 오픈소스 프로세스이다.&lt;/p>
&lt;p>&lt;img src="./process.png" alt="">&lt;/p>
&lt;p>그럼 오픈소스 프로세스가 어떻게 구성되어야 하는지 하나하나 살펴보자.&lt;/p>
&lt;h2 id="1-오픈소스-프로세스">1. 오픈소스 프로세스&lt;/h2>
&lt;h3 id="1-오픈소스-식별-및-검사">(1) 오픈소스 식별 및 검사&lt;/h3>
&lt;p>먼저 사용하려는 오픈소스의 라이선스가 무엇인지 식별하고, 라이선스가 요구하는 의무사항은 무엇인지, 알려진 취약점은 존재하는지 확인해야 한다. 어떤 오픈소스를 사용하려고 하는지, 그 라이선스는 무엇인지, 각 라이선스가 부여하는 의무는 무엇인지, 알려진 취약점은 무엇인지 검토하고 기록해야 한다.&lt;/p>
&lt;p>이를 위해 ISO/IEC 5230 표준은 다음과 같이 라이선스 컴플라이언스를 위해 일반적인 오픈소스 라이선스의 사용 사례를 다룰 수 있어야 하고, 각 식별된 라이선스에 의해 부여된 의무, 제한 및 권리를 검토하고 기록하기 위한 문서화된 절차를 요구한다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>3.3.2.1 - A documented procedure for handling the common open source license use cases for the open source components of the supplied software.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>3.1.5.1 - A documented procedure to review and document the obligations, restrictions and rights granted by each identified license.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>이를 위한 절차의 예는 다음과 같다.&lt;/p>
&lt;ol>
&lt;li>오픈소스 프로그램 매니저는 주요 오픈소스 라이선스 의무, 제한, 권리에 대한 가이드를 작성하여 제공한다. 이 가이드에는 일반적인 오픈소스 라이선스의 사용 사례가 관리될 수 있도록 다음과 같은 사용 사례가 포함되어야 한다.
&lt;ul>
&lt;li>바이너리 형태로 배포&lt;/li>
&lt;li>소스 형태로 배포&lt;/li>
&lt;li>추가 라이선스 의무를 유발하는 다른 오픈소스와 통합&lt;/li>
&lt;li>수정된 오픈소스 포함&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>사업 부서는 오픈소스 정책에서 정의한 기준에 따라 라이선스와 알려진 취약점을 확인한다.&lt;/li>
&lt;li>사업 부서는 의문 사항을 오픈소스 프로그램 매니저에게 문의하고, 필요할 경우 오픈소스 프로그램 매니저는 외부 법률 전문가에게 자문을 요청한다.&lt;/li>
&lt;li>모든 내외부의 결정 결과 및 관련 근거는 보관한다.&lt;/li>
&lt;/ol>
&lt;p>이를 위해 기업은 아래의 예시와 같이 제품 출시 전에 오픈소스 식별, 검사 단계를 통해 각 식별된 라이선스가 부가하는 의무, 제한을 검토하고 기록하기 위한 문서화된 절차를 수립해야 한다.&lt;/p>
&lt;p>“&lt;a href="https://haksungjang.github.io/docs/openchain/#%EB%B6%80%EB%A1%9D-2-%EC%83%98%ED%94%8C-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EC%BB%B4%ED%94%8C%EB%9D%BC%EC%9D%B4%EC%96%B8%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4">부록 2. 샘플 오픈소스 프로세스&lt;/a>”의 &lt;a href="https://haksungjang.github.io/docs/openchain/#1-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EC%8B%9D%EB%B3%84subidentification-of-open-sourcesub">1. 오픈소스 식별&lt;/a>&lt;/p>
&lt;p>&lt;img src="identification.png" alt="">&lt;/p>
&lt;center>&lt;i>오픈소스 식별 단계 (샘플)&lt;/i>&lt;/center>&lt;br>
&lt;p>오픈소스 식별 및 검사 단계에서는 소스 코드 스캔 도구를 사용할 수 있다. 이에 대한 자세한 내용은 &amp;ldquo;&lt;a href="../6-tool/">6. 도구&lt;/a>&amp;ldquo;에서 설명한다.&lt;/p>
&lt;h3 id="2-문제-해결">(2) 문제 해결&lt;/h3>
&lt;p>오픈소스 식별 및 검사를 통해 오픈소스를 식별하고 라이선스와 보안취약점 리스크까지 확인 한 후에는 문제를 해결하는 절차가 필요하다. 다음과 같은 방법으로 검출된 문제를 모두 해결해야 한다.&lt;/p>
&lt;ul>
&lt;li>이슈가 되는 오픈소스를 삭제한다.&lt;/li>
&lt;li>라이선스 이슈라면, 다른 라이선스 하의 오픈소스료 교체한다.&lt;/li>
&lt;li>보안취약점 이슈라면, 알려진 취약점이 수정된 버전으로 교체한다.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://haksungjang.github.io/docs/openchain/#%EB%B6%80%EB%A1%9D-2-%EC%83%98%ED%94%8C-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EC%BB%B4%ED%94%8C%EB%9D%BC%EC%9D%B4%EC%96%B8%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4">부록 2. 샘플 오픈소스 프로세스&lt;/a>의 문제 해결 단계를 통해 발견된 모든 문제를 해결한다.&lt;/p>
&lt;h3 id="3-sbom-식별-검토-보관">(3) SBOM 식별, 검토, 보관&lt;/h3>
&lt;p>오픈소스 컴플라이언스 활동의 가장 기본은 배포용 소프트웨어에 포함된 오픈소스 현황을 파악하는 것이다. 배포용 소프트웨어에 포함된 오픈소스와 그 라이선스를 식별하여 그 정보를 담고 있는 SBOM(Software Bill of Materials)을 작성하고 관리하는 프로세스를 구축해야 한다. 배포용 소프트웨어의 버전마다 어떤 오픈소스가 포함되어 있는지 알고 있어야 소프트웨어를 배포할 때 각 오픈소스의 라이선스가 요구하는 의무 사항을 준수할 수 있기 때문이다. 이는 오픈소스 보안취약점을 발견하고 대응하기 위해서도 꼭 필요한 과정이다.&lt;/p>
&lt;p>모든 오픈소스는 배포용 소프트웨어에 통합하기 전에 검토 및 승인되어야 한다. 오픈소스의 기능, 품질뿐만 아니라 출처, 라이선스 요건을 충족할 수 있는지, 알려진 취약점을 해결하였는지 등에 대해 사전 검토가 되어야 한다. 이를 위해 검토 요청 → 리뷰 → 승인 과정이 필요하다. &lt;/p>
&lt;p>이를 위해 ISO 표준은 공통적으로 다음과 같이 프로그램 내 각 역할을 담당하는 인원이 적합하게 배치되고, 예산이 적절하게 지원되어야 함을 요구한다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.3.1.1 - A documented procedure for identifying, tracking, reviewing, approving, and archiving information about the collection of open source components from which the supplied software is comprised.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
&lt;ul>
&lt;li>3.3.1.1: A documented procedure ensuring all Open Source Software used in the Supplied Software is continuously recorded across the lifecycle of the Supplied Software. This includes an archive of all Open Source Software used in the Supplied Software;&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>이를 위해 기업은 아래의 예시와 같이 오픈소스 프로세스에 SBOM에 대한 내용을 반영할 수 있다.&lt;/p>
&lt;p>&lt;a href="https://haksungjang.github.io/docs/openchain/#%EB%B6%80%EB%A1%9D-2-%EC%83%98%ED%94%8C-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EC%BB%B4%ED%94%8C%EB%9D%BC%EC%9D%B4%EC%96%B8%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4">부록 2. 샘플 오픈소스 프로세스&lt;/a>에서는 기업의 오픈소스 컴플라이언스를 위한 프로세스 모든 과정에 관해 설명하고 있다. &lt;a href="https://haksungjang.github.io/docs/openchain/#1-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EC%8B%9D%EB%B3%84subidentification-of-open-sourcesub">1. 오픈소스 식별&lt;/a>부터 &lt;a href="https://haksungjang.github.io/docs/openchain/#6-%EB%93%B1%EB%A1%9Dsubregistrationsub">6. 등록&lt;/a>까지의 과정을 통해 SBOM을 작성하고 관리하게 된다.&lt;/p>
&lt;p>SBOM 관리를 위한 도구에 대해서는 &amp;ldquo;&lt;a href="../6-tool/">6. 도구&lt;/a>&amp;ldquo;에서 자세히 설명한다.&lt;/p>
&lt;p>또 이와 같은 오픈소스 프로세스의 모든 과정과 결과는 문서화가 되어야 한다. 이메일을 사용하는 것보다는 &lt;a href="https://www.atlassian.com/software/jira">Jira&lt;/a>, &lt;a href="https://www.bugzilla.org/">Bugzilla&lt;/a> 등의 이슈 트래킹 시스템을 이용하는 것이 이러한 과정을 효율적으로 문서화 할 수 있다.&lt;/p>
&lt;h3 id="4-라이선스-컴플라이언스-산출물-생성">(4) 라이선스 컴플라이언스 산출물 생성&lt;/h3>
&lt;p>위에서 오픈소스 컴플라이언스 활동의 가장 기본은 배포용 소프트웨어에 포함된 오픈소스 현황을 파악하는 것이라고 하였다. 이는 바로 오픈소스 컴플라이언스의 핵심인 오픈소스 라이선스 요구사항을 올바르게 충족하기 위해서이다. 즉, 배포용 소프트웨어에 포함된 오픈소스에 대한 컴플라이언스 산출물 세트를 생성하는 프로세스가 구축되어야 한다.&lt;/p>
&lt;p>이를 위해 ISO/IEC 5230 표준은 다음과 같이 컴플라이언스 산출물을 준비하고, 이를 배포용 소프트웨어와 함께 제공하기 위한 프로세스를 설명하는 문서화된 절차를 요구한다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.4.1.1 - A documented procedure that describes the process under which the compliance artifacts are prepared and distributed with the supplied software as required by the identified licenses.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>컴플라이언스 산출물은 크게 두 가지로 구분된다.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>오픈소스 고지문 : 오픈소스 라이선스 전문과 저작권 정보 제공을 위한 문서&lt;/p>
&lt;p>&lt;img src="ossnotice.png" alt="">&lt;/p>
&lt;ul>
&lt;li>도구를 활용하여 취합한 SBOM에 해당하는 오픈소스 고지문을 생성하는 방법에 대해 &amp;ldquo;&lt;a href="../6-tool/">6. 도구&lt;/a>&amp;ldquo;에서 추가로 설명한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>공개할 소스 코드 패키지 : GPL, LGPL 등 소스 코드 공개를 요구하는 오픈소스 라이선스 의무 이행을 위해 공개할 소스 코드를 취합한 패키지&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>컴플라이언스 산출물은 배포용 소프트웨어를 배포할 때 함께 제공해야 한다. “&lt;a href="https://haksungjang.github.io/docs/openchain/#%EB%B6%80%EB%A1%9D-2-%EC%83%98%ED%94%8C-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EC%BB%B4%ED%94%8C%EB%9D%BC%EC%9D%B4%EC%96%B8%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4">부록 2. 샘플 오픈소스 프로세스&lt;/a>”의 고지 단계부터 배포 단계를 통해 컴플라이언스 산출물을 생성하여 배포한다.&lt;/p>
&lt;p>배포용 소프트웨어를 배포 시, 공개할 소스 코드 패키지를 동봉하는 것이 곤란할 경우, 최소 3년간 소스 코드를 제공하겠다는 서면 약정서(Written Offer)를 제공하는 것으로 대신할 수 있다. 일반적으로 서면 약정서는 제품의 사용자 매뉴얼을 통해 제공하며, 예시는 다음과 같다.&lt;/p>
&lt;pre>&lt;code>The software included in this product contains copyrighted software
that is licensed under the GPL. A copy of that license is included
in this document on page X. You may obtain the complete Corresponding
Source code from us for a period of three years after our last shipment
of this product, which will be no earlier than 2011-08- 01, by sending
a money order or check for $5 to:
GPL Compliance Division
Our Company
Any Town, US 99999
Please write“source for product Y” in the memo line of your payment.
You may also find a copy of the source at http://www.example.com/sources/Y/.
This offer is valid to anyone in receipt of this information.
&amp;lt;출처 : SFLC Guide to GPL Compliance&amp;gt;
&lt;/code>&lt;/pre>&lt;p>따라서, 컴플라이언스 산출물은 3년 이상 보관해야 하며 이를 위한 프로세스가 구축되어야 한다. 이를 위해 기업은 오픈소스 웹사이트 구축을 고려해야 하며, 이에 대한 자세한 내용은 &amp;ldquo;&lt;a href="../6-tool/">6. 도구&lt;/a>&amp;ldquo;에서 설명한다.&lt;/p>
&lt;h2 id="2-외부-문의-대응-프로세스">2. 외부 문의 대응 프로세스&lt;/h2>
&lt;p>기업이 외부 클레임에 의해 법적 소송까지 당하지 않기 위해서는 외부 문의 및 요청에 가능한 빠르고 정확하게 대응하는 것이 중요하다. 이를 위해 기업은 외부 오픈소스 문의를 빠르고 효과적으로 대응 할 수 있는 프로세스를 갖추고 있어야 한다.&lt;/p>
&lt;p>이를 위해 ISO 표준은 공통적으로 다음과 같이 제3자의 문의에 대응하기 위한 내부의 문서화된 절차를 요구한다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.2.1.2 - An internal documented procedure for responding to third party open source license compliance inquiries.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
&lt;ul>
&lt;li>3.2.1.2: An internal documented procedure exists for responding to third party Known Vulnerability or Newly Discovered Vulnerability inquiries.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>아래 그림은 외부 문의 대응을 위해 기업이 갖춰야할 프로세스 예시이다.&lt;/p>
&lt;p>&lt;img src="access.png" alt="">&lt;/p>
&lt;center>&lt;i>외부 문의 대응 프로세스 (샘플)&lt;/i>&lt;/center>&lt;br>
&lt;p>&lt;a href="https://haksungjang.github.io/docs/openchain/#2-%EC%99%B8%EB%B6%80-%EB%AC%B8%EC%9D%98-%EB%8C%80%EC%9D%91-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4">“부록 2. 샘플 오픈소스 프로세스의 2. 외부 문의 대응 프로세스&lt;/a>”에서 세부 내용을 확인할 수 있다.&lt;/p>
&lt;h2 id="3-보안취약점-대응-프로세스">3. 보안취약점 대응 프로세스&lt;/h2>
&lt;p>기업은 제품/서비스를 개발하면서 오픈소스 보안취약점을 탐지하고 해결하는 등 보안 보증을 위한 활동을 수행해야 한다.&lt;/p>
&lt;p>이를 위해 ISO/IEC DIS 18974 표준은 다음과 같이 보안 보증 방법에 대한 문서화된 절차와 수행된 조치를 기록하도록 요구한다.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
&lt;p>The Program demonstrates a sound and robust handling procedures of Known Vulnerabilities and Secure Software Development by defining and implementing following procedures:&lt;/p>
&lt;ul>
&lt;li>Method to identify structural and technical threats to the Supplied Software is defined;&lt;/li>
&lt;li>Method for detecting existence of Known Vulnerabilities in Supplied Software;&lt;/li>
&lt;li>Method for following up on identified Known Vulnerabilities;&lt;/li>
&lt;li>Method to communicate identified Known Vulnerabilities to customer base when warranted;&lt;/li>
&lt;li>Method for analyzing Supplied Software for newly published Known Vulnerabilities post release of the Supplied Software;&lt;/li>
&lt;li>Method for continuous and repeated Security Testing is applied for all Supplied Software before release;&lt;/li>
&lt;li>Method to verify that identified risks will have been addressed before release of Supplied Software;&lt;/li>
&lt;li>Method to export information about identified risks to third parties as appropriate.&lt;/li>
&lt;/ul>
&lt;p>A process shall exist for the Security Assurance methods listed above.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>3.1.5.1: A documented procedure exists for each of the methods identified above.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>3.3.2.1: A documented procedure for handling detection and resolution of Known Vulnerabilities for the Open Source Software components of the Supplied Software;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>3.3.2.2: For each Open Source Software component a record is maintained of the identified Known Vulnerabilities and action(s) taken (including even if no action was required).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>이를 위해 기업은 배포용 소프트웨어에서 알려진 취약점 존재 여부를 탐지하고, 식별된 위험이 출시 전에 해결해야 할 뿐 아니라 출시 후 새롭게 알려진 취약점에 대응하기 위한 방법과 절차를 갖춰야 한다.&lt;/p>
&lt;p>먼저 알려진 취약점을 탐지하고 해결하는 절차는 오픈소스 프로세스의 오픈소스 식별 단계, 소스 코드 검사 단계, 문제 해결 단계를 통해 수행할 수 있다.&lt;/p>
&lt;p>그리고, 배포용 소프트웨어의 릴리스 후 새롭게 알려진 취약점이 공개되었을 때 이미 배포된 소프트웨어에 존재하는지 확인하고, 해결하기 위해서는 신규 보안취약점 대응 프로세스를 수립해야 한다.&lt;/p>
&lt;p>아래는 신규 보안취약점 발견 시 대응을 위한 프로세스 샘플이다.&lt;/p>
&lt;p>&lt;img src="./securityprocess.png" alt="">&lt;/p>
&lt;center>&lt;i>신규 보안취약점 대응 프로세스 (샘플)&lt;/i>&lt;/center>&lt;br>
&lt;p>&lt;a href="https://haksungjang.github.io/docs/openchain/#2-%EC%99%B8%EB%B6%80-%EB%AC%B8%EC%9D%98-%EB%8C%80%EC%9D%91-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4">“부록 2. 샘플 오픈소스 프로세스의 3. 신규 보안취약점 대응 프로세스&lt;/a>”에서 세부 내용을 확인할 수 있다.&lt;/p>
&lt;h2 id="4-오픈소스-기여-프로세스">4. 오픈소스 기여 프로세스&lt;/h2>
&lt;p>기업이 외부 오픈소스 프로젝트에 기여를 허용하는 정책을 갖고 있다면, 사내 개발자들이 어떤 절차로 외부 프로젝트에 기여할 수 있을지 관리하는 문서화된 절차가 있어야 한다.&lt;/p>
&lt;p>이를 위해 ISO/IEC 5230 표준은 다음과 같이 오픈소스 기여를 관리하는 문서화된 절차를 요구한다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
3.5.1.2 - A documented procedure that governs open source contributions;
&lt;/div>
&lt;p>SK텔레콤에서 공개한 &lt;a href="https://sktelecom.github.io/guide/contribute/process/">오픈소스 기여 절차&lt;/a>는 좋은 예이다.&lt;/p>
&lt;p>&lt;img src="contribution.png" alt="">
&lt;a href="https://sktelecom.github.io/guide/contribute/process/">https://sktelecom.github.io/guide/contribute/process/&lt;/a>&lt;/p>
&lt;h2 id="5-프로세스-현행화">5. 프로세스 현행화&lt;/h2>
&lt;p>프로세스가 실제 운영되지 않고 문서화만 되어 있다면 바람직하지 않다. 또한, 업무 상황이나 조직 구성에 맞지 않게 되어 있는 것도 문제다. 기업은 프로세스가 회사 내부 조직과 상황에 맞게 항상 현행화 되어야 한다.&lt;/p>
&lt;p>이를 위해 ISO/IEC DIS 18974 표준은 다음과 같이 프로세스를 주기적으로 검토 및 개선해야 함을 요구한다.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
&lt;ul>
&lt;li>3.1.2.5: Documented Evidence of periodic reviews and changes made to the process;&lt;/li>
&lt;li>3.1.2.6: Documented verification that these processes are current with company internal best practices and who is assigned to accomplish them.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>아래의 예는 &lt;a href="https://haksungjang.github.io/docs/openchain/#2-%EC%99%B8%EB%B6%80-%EB%AC%B8%EC%9D%98-%EB%8C%80%EC%9D%91-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4">“부록 2. 샘플 오픈소스 프로세스의 3. 신규 보안취약점 대응 프로세스&lt;/a>”이며, 프로세스가 항상 현행화되어야 하고 이를 누가 책임지고 수행해야 하는지를 명시하였다.&lt;/p>
&lt;h2 id="6-summary">6. Summary&lt;/h2>
&lt;p>여기까지 프로세스를 구축하게 되면 ISO 표준 규격 중 아래의 녹색으로 표시된 요구사항을 충족할 수 있다.&lt;/p>
&lt;p>&lt;img src="./processno.png" alt="">&lt;/p></description></item><item><title>Guide: 4. 도구</title><link>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/4-tool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/4-tool/</guid><description>
&lt;h2 id="1-소스-코드-스캔-도구">1. 소스 코드 스캔 도구&lt;/h2>
&lt;p>오픈소스 프로세스의 오픈소스 식별 및 검사 단계에서는 소스 코드 스캔 도구를 사용할 수 있다. 소스 코드 스캔 도구는 무료로 사용할 수 있는 오픈소스 기반 도구부터 상용 도구까지 다양하게 있는데, 각 도구는 특장점 들이 있지만 어떤 하나도 모든 문제를 해결할 수 있는 완벽한 기능을 제공하지 않는다. 따라서 기업은 제품의 특성과 요구사항에 맞는 적합한 도구를 선택해야 한다.&lt;/p>
&lt;p>많은 기업이 이러한 자동화된 소스 코드 스캔 도구와 수동 검토를 병행하여 이용한다. Linux Foundation의 &lt;a href="https://haksungjang.github.io/docs/openchain/#fn:24">FOSSology&lt;/a> 프로젝트는 오픈소스로 공개된 소스 코드 스캔 도구로서 기업들이 손쉽게 무료로 사용할 수 있다.&lt;/p>
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 484px">
&lt;img class="card-img-top" src="https://openChain-project.github.io/OpenChain-KWG/OpenChain-KWG/guide/opensource_for_enterprise/4-tool/fossology_hu1f7b14a5f6ba93f8dfdcd97738077fe2_13569_900x600_fit_catmullrom_2.png" width="474" height="231">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;center>&lt;i>https://www.fossology.org/&lt;/i>&lt;/center>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;p>FOSSology의 설치 및 사용 방법은 &lt;a href="https://haksungjang.github.io/docs/openchain/#1-fossology">부록 3. 오픈소스 도구&lt;/a>를 참고한다.&lt;/p>
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 760px">
&lt;img class="card-img-top" src="https://openChain-project.github.io/OpenChain-KWG/OpenChain-KWG/guide/opensource_for_enterprise/4-tool/fossologyguide_huf7edb824cc580d49afb3e420042d04a4_243611_900x600_fit_catmullrom_2.png" width="750" height="600">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;center>&lt;i>https://haksungjang.github.io/docs/openchain/#1-fossology&lt;/i>&lt;/center>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;h2 id="2-dependency-분석-도구">2. Dependency 분석 도구&lt;/h2>
&lt;p>근래의 소프트웨어 개발 시에는 Gradle, Maven 등 Package Manager를 지원하는 빌드 환경을 사용한다. 이런 빌드 환경에서는 소스 코드가 없어도 빌드 타임에 필요한 Dependency 라이브러리를 원격의 공간으로부터 받아와서 배포용 소프트웨어를 구성한다. 이때의 Dependency 라이브러리는 배포용 소프트웨어에는 포함되지만 소스 코드 스캔 도구로는 검출되지 않는다. 따라서 Dependency 분석을 위한 도구를 활용하는 것도 중요하다.&lt;/p>
&lt;p>오픈소스인 OSS Review Toolkit은 Analyzer라는 Dependency 분석 도구를 제공한다.&lt;/p>
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 650px">
&lt;img class="card-img-top" src="https://openChain-project.github.io/OpenChain-KWG/OpenChain-KWG/guide/opensource_for_enterprise/4-tool/ort_hube1128b774f3d17c68febc7698949979_37592_900x600_fit_catmullrom_2.png" width="640" height="144">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;center>&lt;i>https://github.com/oss-review-toolkit/ort#analyzer&lt;/i>&lt;/center>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;p>또한 LG전자는 FOSSLight Dependency Scanner를 오픈소스로 공개하였다. FOSSLight Dependency Scanner는 Gradle, Maven, NPM, PIP, Pub, Cocoapods 등 다양한 Package Manager를 지원한다.&lt;/p>
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 609px">
&lt;img class="card-img-top" src="https://openChain-project.github.io/OpenChain-KWG/OpenChain-KWG/guide/opensource_for_enterprise/4-tool/fosslightdependency_hu31e27796df6b3b9446cbf7cbbef6bcbd_144925_900x600_fit_catmullrom_2.png" width="599" height="409">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;center>&lt;i>https://fosslight.org/ko/scanner/&lt;/i>&lt;/center>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;h2 id="3-sbom-관리-도구">3. SBOM 관리 도구&lt;/h2>
&lt;p>ISO/IEC 5230 규격의 3.3.1.2에서는 배포용 소프트웨어에 포함된 SBOM 목록은 문서화하여 보관할 것을 요구한다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.3.1.2 - Open source component records for the supplied software that demonstrates the documented procedure was properly followed.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
&lt;ul>
&lt;li>3.3.1.2: Open Source Software Component Records for the Supplied Software that demonstrates the documented procedure was properly followed.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>SBOM을 Excel과 같은 Spreadsheet 프로그램으로 관리할 수도 있다. 하지만, 배포용 소프트웨어의 개수와 버전이 수백개가 넘어갈 경우, 이를 수동으로 관리하는 것은 쉽지 않다. 이를 위한 오픈소스 자동화 도구를 도입하는 것이 좋다.&lt;/p>
&lt;p>Eclipse 재단에서 후원하는 오픈소스 프로젝트인 &lt;a href="https://projects.eclipse.org/proposals/sw360">SW360&lt;/a>은 배포용 소프트웨어별로 포함하고 있는 오픈소스 목록을 트래킹할 수 있는 기능을 제공한다.&lt;/p>
&lt;p>&lt;img src="sw360project.png" alt="">&lt;/p>
&lt;p>SW360의 설치 및 사용 방법은 &lt;a href="https://haksungjang.github.io/docs/openchain/#%EB%B6%80%EB%A1%9D-3-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EB%8F%84%EA%B5%AC">부록 3. 오픈소스 도구&lt;/a>를 참고할 수 있다.&lt;/p>
&lt;p>그리고 위에서 언급한 FOSSLight도 SBOM 관리를 위한 기능을 제공한다.&lt;/p>
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 910px">
&lt;img class="card-img-top" src="https://openChain-project.github.io/OpenChain-KWG/OpenChain-KWG/guide/opensource_for_enterprise/4-tool/fosslightproject_hu38334993454753095246ddd418adc9ba_41626_900x600_fit_catmullrom_2.png" width="900" height="289">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;center>&lt;i>https://fosslight.org/fosslight-guide/started/2_try/4_project.html&lt;/i>&lt;/center>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;p>LG전자는 FOSSLight를 자체 개발하여 지난 수년간 전체 사업부의 배포용 소프트웨어에 대한 SBOM을 관리해왔으며, 2021년 6월, 이를 누구나 사용할 수 있도록 오픈소스로 공개하였음을 발표하였다.&lt;/p>
&lt;p>자세한 설치 및 사용 방법을 한국어 가이드로 제공하고 있어서 국내 기업에게 큰 도움이 될 것으로 기대한다.&lt;/p>
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 849px">
&lt;img class="card-img-top" src="https://openChain-project.github.io/OpenChain-KWG/OpenChain-KWG/guide/opensource_for_enterprise/4-tool/fosslight_hub65fa4fd2ded0b8a62af322a753fc134_83005_900x600_fit_catmullrom_2.png" width="839" height="600">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;center>&lt;i>https://fosslight.org/&lt;/i>&lt;/center>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;h2 id="4-오픈소스-보안취약점-관리-도구">4. 오픈소스 보안취약점 관리 도구&lt;/h2>
&lt;p>알려진 취약점이 포함된 제품/서비스를 추적하고 이를 해결해야 한다. 기업은 이를 자동화하는 도구 환경을 구축해야 한다.&lt;/p>
&lt;p>SW360은 등록된 Release에 대해 보안 취약점이 있는지 자동으로 확인할 수 있다. 이를 위해 SW360은 CVE 정보를 주기적으로 수집하도록 24시간마다 스케쥴링하는 기능을 제공한다. 이렇게 스케쥴링을 설정하면 SW360은 정해진 시간에 CVE Search 사이트(&lt;a href="https://cve.circl.lu/">https://cve.circl.lu/&lt;/a>)에서 CVE 정보를 수집한다. 이렇게 Vulnerabilities 정보가 수집된 이후에는 생성한 Project에 보안 취약점이 있는지 조회할 수 있어서, 새로 공개된 취약점이 이미 출시한 제품된 제품에 존재하는지 여부도 추적이 가능하다.&lt;/p>
&lt;p>SW360으로 보안취약점 관리하는 방법은 &lt;a href="https://haksungjang.github.io/docs/openchain/#%EB%B6%80%EB%A1%9D-3-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EB%8F%84%EA%B5%AC">부록 3. 오픈소스 도구&lt;/a>를 참고할 수 있다.&lt;/p>
&lt;p>FOSSLight도 이와 유사하게 보안취약점 정보를 자동으로 취득하고, 보안취약점이 검출된 프로젝트 정보를 자동으로 확인하여 필요 시 메일 등 알림을 제공한다.&lt;/p>
&lt;h2 id="5-오픈소스-컴플라이언스-산출물-생성-도구">5. 오픈소스 컴플라이언스 산출물 생성 도구&lt;/h2>
&lt;p>오픈소스 컴플라이언스 산출물 중 오픈소스 고지문을 수작업으로 작성하기 보다는 자동으로 생성하는 도구를 활용하는 것이 좋다.&lt;/p>
&lt;p>SK텔레콤은 사내에서 사용하는 오픈소스 고지문 자동 생성 도구를 오픈소스로 공개하였고(&lt;code>onot&lt;/code> : &lt;a href="https://github.com/sktelecom/onot),">https://github.com/sktelecom/onot),&lt;/a> 카카오에서 주요 기능을 기여하는 방법으로 공동 개발에 참여하였다.&lt;/p>
&lt;p>&lt;img src="onot.png" alt="">&lt;/p>
&lt;center>&lt;i>onot 설치방법&lt;/i>&lt;/center>&lt;br>
&lt;p>&lt;code>onot&lt;/code>은 SPDX Documment 형태로 작성된 SBOM을 자동으로 아래와 같이 오픈소스 고지문 포맷으로 변환하는 도구이다. Python 프로그램으로 가볍고 간단하게 사용할 수 있다.&lt;/p>
&lt;p>&lt;img src="./noticesample.png" alt="">&lt;/p>
&lt;center>&lt;i>onot 생성 오픈소스 고지문 샘플&lt;/i>&lt;/center>&lt;br>
&lt;p>FOSSLight는 생성한 SBOM을 기반으로 오픈소스 고지문을 생성해 준다.&lt;/p>
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 910px">
&lt;img class="card-img-top" src="https://openChain-project.github.io/OpenChain-KWG/OpenChain-KWG/guide/opensource_for_enterprise/4-tool/fosslightnotice_hub26133ecb8b043f50cb5cffcf582687c_47692_900x600_fit_catmullrom_2.png" width="900" height="394">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;center>&lt;i>https://fosslight.org/fosslight-guide/started/2_try/4_project.html&lt;/i>&lt;/center>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;h2 id="6-오픈소스-컴플라이언스-산출물-보관">6. 오픈소스 컴플라이언스 산출물 보관&lt;/h2>
&lt;p>기업은 오픈소스 웹사이트를 만들고, 오픈소스 컴플라이언스 산출물을 등록하여 외부 고객들이 배포용 소프트웨어에 대한 오픈소스 고지문과 공개할 소스 코드 패키지를 언제든지 다운받을 수 있도록 편의를 제공하는 것이 좋다.&lt;/p>
&lt;p>이를 위해 ISO/IEC 5230 표준은 다음과 같이 배포용 소프트웨어의 컴플라이언스 산출물 사본을 보관하기 위한 문서화된 절차를 요구한다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.4.1.2 - A documented procedure for archiving copies of the compliance artifacts of the supplied software - where the archive is planned to exist for a reasonable period of time (Determined by domain, legal jurisdiction and/or customer contracts) since the last offer of the supplied software; or as required by the identified licenses (whichever is longer). Records exist that demonstrate the procedure has been properly followed.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>이를 위한 도구 환경으로 SK텔레콤의 오픈소스 웹사이트를 참고할 수 있다.&lt;/p>
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 910px">
&lt;img class="card-img-top" src="https://openChain-project.github.io/OpenChain-KWG/OpenChain-KWG/guide/opensource_for_enterprise/4-tool/sktcompliance_hue3e4b400473b31cb9330b17ebc2e2045_51427_900x600_fit_catmullrom_2.png" width="900" height="313">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;center>&lt;i>https://sktelecom.github.io/compliance/&lt;/i>&lt;/center>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;p>특히, 이 웹사이트는 오픈소스로 개발하였고, 소스 코드를 공개하고 있어서 다른 기업들도 쉽게 유사한 환경을 구축할 수 있다.&lt;/p>
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 910px">
&lt;img class="card-img-top" src="https://openChain-project.github.io/OpenChain-KWG/OpenChain-KWG/guide/opensource_for_enterprise/4-tool/sktgithub_huea9391e4744127ce4c1693f784f8a97e_57123_900x600_fit_catmullrom_2.png" width="900" height="352">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;center>&lt;i>https://github.com/sktelecom/sktelecom.github.io&lt;/i>&lt;/center>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;h2 id="7-summary">7. Summary&lt;/h2>
&lt;p>이렇게 도구 환경까지 구축하게 되면 ISO/IEC 5230 요구사항을 아래와 같이 준수하게 된다.&lt;/p>
&lt;p>&lt;img src="toolno.png" alt="">&lt;/p></description></item><item><title>Guide: 5. 교육/평가</title><link>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/5-training/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/5-training/</guid><description>
&lt;h2 id="1-교육">1. 교육&lt;/h2>
&lt;p>아무리 훌륭한 정책과 프로세스를 구축하였다고 해도 기업의 구성원이 아무도 신경쓰지 않는다면 무용지물일 것이다. 오픈소스 정책과 오픈소스 프로세스가 기업에서 효과적으로 동작하기 위해서는 구성원 교육이 중요하다.&lt;/p>
&lt;p>기업은 모든 프로그램 참여자가 조직 내에 오픈소스 정책이 있다는 것을 인식하고 필요한 활동을 할 수 있도록 교육, 내부 위키 등 실질적인 수단을 제공해야 한다. 여기서 프로그램 참여자란 기업이 소프트웨어를 개발하고 배포, 기여하는 데 관여하는 모든 직원을 의미하며, 소프트웨어 개발자, 배포 엔지니어, 품질 엔지니어 등을 포함한다.&lt;/p>
&lt;p>이를 위해 ISO 표준은 공통적으로 다음과 같이 오픈소스 정책을 알리기 위한 문서화된 절차를 요구한다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.1.1.2 - A documented procedure that makes program participants aware of the existence of the open source policy (e.g., via training, internal wiki, or other practical communication method).&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
&lt;ul>
&lt;li>3.1.1.2: A documented procedure to make Program Participants aware of the Security Assurance policy.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>많은 기업은 오픈소스 정책 문서를 사내 위키 사이트를 통해 공개하여 직원 누구나 필요한 사항을 확인할 수 있게 한다. 또한, 신규 채용 인원의 입사 연수 시 오픈소스 정책에 대한 교육을 의무화하고, 프로그램 참여자를 대상으로 매년 혹은 2년에 한 번씩 주기적인 교육을 제공함으로 모든 프로그램 참여자가 오픈소스 정책의 존재를 인식하게 한다.&lt;/p>
&lt;p>기업은 이러한 방법들을 다음의 예와 같이 작성하여 오픈소스 정책 문서 포함해야 한다.&lt;/p>
&lt;pre>&lt;code>5. 교육 및 평가
모든 소프트웨어 배포 참여자는 매년 [Learning Portal]에서 제공하는 오픈소스 의무 교육을 수강해야 한다.
이를 통해 오픈소스 정책, 관련 교육 정책 및 조회 방법을 숙지한다. 교육 이력은 [Learning Portal]에 보존한다.
&lt;/code>&lt;/pre>&lt;p>또한, 기업은 프로그램 참여자가 기업의 오픈소스 정책, 오픈소스 관련 목표, 효과적인 오픈소스 프로그램이 되기 위한 참여자의 기여 방법, 그리고 프로그램 요구사항을 준수하지 않을 경우 미치는 영향에 대해 인식하게 해야 한다. 이를 위해 기업은 교육을 제공하고, 프로그램 참여자에게 올바르게 인식하였는지 확인하기 위해 평가를 수행하고 평가 결과는 문서화하여 보관해야 한다.&lt;/p>
&lt;p>이를 위해 ISO 표준은 공통적으로 다음과 같이 프로그램 참여자의 인식을 평가하였음을 나타내는 문서화된 증거를 요구한다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.1.3.1 - Documented evidence of assessed awareness for the program participants - which should include the program&amp;rsquo;s objectives, one&amp;rsquo;s contribution within the program, and implications of program non-conformance.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
3.1.3.1: Documented Evidence of assessed awareness for the Program Participants - which should include the Program’s objectives, one’s contribution within the Program, and implications of Program non-conformance.
&lt;/div>
&lt;p>따라서 기업은 아래의 예와 같은 내용을 기업의 오픈소스 정책에 포함할 수 있다.&lt;/p>
&lt;pre>&lt;code>1. 목적
(1) 정책의 목적
이 정책은 회사에서 소프트웨어 개발, 서비스, 배포에 관여하는 전체 조직이 올바르게 오픈소스를 활용하기 위해 다음과 같은 원칙을 제공한다.
1) 오픈소스 컴플라이언스 / 보안 보증 원칙
2) 외부 오픈소스 프로젝트로의 기여 원칙
3) 사내 프로젝트를 오픈소스로 공개하기 위한 원칙
이러한 원칙은 회사의 모든 구성원이 오픈소스의 가치를 이해하고, 오픈소스를 올바르게 사용하며, 오픈소스 커뮤니티에 기여하기 위한 방법을 제공한다.
(2) 미준수 시 영향
이 정책을 준수하지 않는다면 다음과 같은 상황이 발생할 수 있다.
* 외부로부터 오픈소스 라이선스 준수 요구를 받게 된다.
* 회사가 개발한 소스 코드를 원하지 않게 공개해야 한다.
* 오픈소스 저작권자로부터 법적 소송을 제기당하게 된다.
* 저작권 침해 및 계약 위반으로 벌금을 부과 당하거나, 제품 판매 중지 명령을 받게 된다.
* 회사 평판이 손실된다.
* 공급업체와의 계약 위반이 되어 손해배상 청구를 당하게 된다.
* 심각한 보안 사고에 노출되어 회사에 막대한 손해를 끼치게 된다.
이러한 이유로 회사는 오픈소스 정책의 위반을 심각하게 간주하며, 이를 위반하는 구성원이나 조직은 징계 절차에 처할 수 있다.
(3) 구성원의 공헌 방법
모든 구성원은 이 정책의 근거와 내용을 이해하고 필요한 활동을 충실히 수행함으로써 정책의 효과 및 회사의 컴플라이언스 수준 향상에 공헌할 수 있다.
&lt;/code>&lt;/pre>&lt;p>평가에 대해서는 아래에서 한번 더 자세히 설명한다.&lt;/p>
&lt;p>오픈소스 교육에는 오픈소스 기여 정책에 대한 내용도 포함한다. 오픈소스 기여 정책을 만들었다 해도 사내 구성원이 이에 대한 존재를 알지 못한다면 무분별한 기여 활동으로 개인과 회사에 피해가 발생할 우려가 있다.&lt;/p>
&lt;p>이를 위해 ISO/IEC 5230 표준은 다음과 같이 모든 프로그램 참여자가 오픈소스 기여 정책의 존재를 인식하도록 하는 문서화된 절차를 요구한다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.5.1.3 - A documented procedure that makes all program participants aware of the existence of the open source contribution policy (e.g., via training, internal wiki, or other practical communication method).&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>따라서 기업은 모든 사내 개발자가 오픈소스 기여 정책의 존재를 알 수 있도록 오픈소스 교육을 제공해야 한다.&lt;/p>
&lt;p>교육자료를 새롭게 제작하는 것도 처음 업무를 시작하는 담당자에게는 쉽지 않은 일일 수 있다. 이런 어려움을 돕고자 엔씨소프트는 사내 오픈소스 교육자료를 누구나 사용할 수 있도록 교안(PPT)와 강의 스크립트를 GitHub에 공개하였다.&lt;/p>
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 910px">
&lt;img class="card-img-top" src="https://openChain-project.github.io/OpenChain-KWG/OpenChain-KWG/guide/opensource_for_enterprise/5-training/ncsofttraining_hub642cc500108499b0e5eb4adfb0c803c_81325_900x600_fit_catmullrom_2.png" width="900" height="483">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;center>&lt;i>https://github.com/ncsoft/oss-basic-training&lt;/i>&lt;/center>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;p>또, 국내 대표 플랫폼 기업인 카카오도 사내 개발자를 위한 오픈소스 교육자료를 누구나 열람할 수 있도록 공개하였다.&lt;/p>
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 910px">
&lt;img class="card-img-top" src="https://openChain-project.github.io/OpenChain-KWG/OpenChain-KWG/guide/opensource_for_enterprise/5-training/kakaotraining_huf372666c9b5e6e536192bad67bd1d09f_4348095_900x600_fit_catmullrom_2.png" width="900" height="507">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;center>&lt;i>http://t1.kakaocdn.net/olive/assets/opensource_guide_kakao.pdf&lt;/i>&lt;/center>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;p>아직 교육 자료를 만들지 않았다면 이런 오픈소스 관리 우수 기업들의 오픈소스 교육 자료를 활용하는 것도 좋은 방법이다.&lt;/p>
&lt;h2 id="2-평가">2. 평가&lt;/h2>
&lt;p>기업은 각 역할에 대한 담당자를 지정하였으면, 지정된 담당자가 교육, 훈련 및 경험을 바탕으로 맡은 역할을 수행할 수 있는 자격을 갖추었음을 확인해야 한다. 역량이 미흡한 프로그램 참여자에게는 충분한 역량을 갖출 수 있도록 교육도 제공해야 한다. 그리고 기업은 각 참여자가 역량을 갖추고 있는지 평가하고 결과를 보관해야 한다.&lt;/p>
&lt;p>이를 위해 ISO 표준은 공통적으로 다음과 같이 프로그램 참여자의 역량을 평가한 문서화된 증거를 요구한다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.1.2.3 - Documented evidence of assessed competence for each program participant.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">ISO/IEC DIS 18974 - Security Assurance&lt;/h4>
&lt;/div>
&lt;p>따라서, 기업은 아래와 같이 교육과 평가를 수행하고 결과를 유지해야 한다.&lt;/p>
&lt;ol>
&lt;li>기업은 각 참여자가 필요한 역량을 보유할 수 있도록 교육을 제공한다.&lt;/li>
&lt;li>교육 내용을 기반으로 평가를 수행한다.&lt;/li>
&lt;li>평가 결과는 기업의 교육 시스템 혹은 HR 부서에서 보관한다.&lt;/li>
&lt;/ol>
&lt;p>프로그램 참여자가 수백 명 이상이어서 교육 제공이 쉽지 않을 경우, 기업의 온라인 교육과 평가 시스템을 이용하는 것도 좋은 방법이다.&lt;/p>
&lt;p>이와 같은 내용은 기업의 오픈소스 정책에 다음과 같이 포함할 수 있다.&lt;/p>
&lt;pre>&lt;code>4. 역할, 책임 및 역량
이 정책의 효과를 보장하기 위해 다음과 같이 역할과 책임 및 각 역할의 담당자가 갖추어야 할 역량을 정의한다.
각 역할의 담당 조직/담당자와 필요 역량 수준은 &amp;quot;Appendix 1. 담당자 현황&amp;quot;에서 정의한다.
5. 교육 및 평가
4장에서 정의한 각 역할을 담당하는 모든 구성원은 [Learning Portal]에서 제공하는 오픈소스 교육을 수강해야 한다.
교육 이력과 평가 결과는 [Learning Portal]에서 최소 3년간 보존한다.
&lt;/code>&lt;/pre>&lt;h2 id="3-오픈소스-라이선스-가이드">3. 오픈소스 라이선스 가이드&lt;/h2>
&lt;p>오픈소스 라이선스를 제대로 준수하기 위해서는 오픈소스 라이선스별로 요구하는 사항에 대해 정확히 알고 있어야 한다. 하지만 개별 소프트웨어 개발자가 이를 일일이 파악하는 것은 어려우므로 오픈소스 프로그램 매니저는 자주 사용되는 오픈소스 라이선스에 대해 일반적인 사용 사례별 요구사항/주의사항을 정리하여 회사 내부에 공유하는 것이 좋다.&lt;/p>
&lt;p>오픈소스 라이선스 가이드에는 일반적인 오픈소스 라이선스 사용 사례 별 요건을 포함하여 개발 부서에서 오픈소스를 사용하면서 올바른 라이선스 의무 준수 활동을 할 수 있게 해야 한다.&lt;/p>
&lt;p>이를 위해 ISO/IEC 5230 표준은 다음과 같이 배포용 소프트웨어 내의 오픈소스 컴포넌트에 대해 일반적인 오픈소스 라이선스 사용 사례를 처리하기 위한 문서화된 절차를 요구한다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">ISO/IEC 5230 - License Compliance&lt;/h4>
&lt;ul>
&lt;li>3.3.2.1 - A documented procedure for handling the common open source license use cases for the open source components of the supplied software.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>오픈소스 라이선스 사용 사례를 처리하기 위해서는 오픈소스 라이선스 별로 분류된 라이선스 가이드가 필요하다. 오픈소스 라이선스에 대한 일반적인 가이드와 라이선스 의무 요약 자료는 한국저작권위원회에서 제공하는 &lt;a href="https://www.olis.or.kr/license/licenseGuide.do">라이선스 가이드&lt;/a>을 참고할 수 있다.&lt;/p>
&lt;p>SK텔레콤의 오픈소스 가이드 내 &lt;a href="https://sktelecom.github.io/guide/use/obligation/">라이선스별 의무사항&lt;/a> 문서도 좋은 자료이다.&lt;/p>
&lt;p>&lt;img src="sktlicenseguide.png" alt="">
&lt;a href="https://sktelecom.github.io/guide/use/obligation/gpl-2.0/">https://sktelecom.github.io/guide/use/obligation/gpl-2.0/&lt;/a>&lt;/p>
&lt;p>기업은 구성원이 쉽게 접근하여 참고할 수 있는 공간에 오픈소스 라이선스 가이드를 제공해야 한다.&lt;/p>
&lt;h2 id="4-summary">4. Summary&lt;/h2>
&lt;p>이와 같이 교육, 평가와 가이드 제공 환경까지 구축하게 되면 ISO/IEC 5230 요구사항을 아래와 같이 준수하게 된다.&lt;/p>
&lt;p>&lt;img src="trainingno.png" alt="">&lt;/p></description></item><item><title>Guide: 6. 준수 선언</title><link>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/6-conforming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/6-conforming/</guid><description>
&lt;p>ISO/IEC 5230 3.6, ISO/IEC DIS 18974 3.4를 제외한 모든 요구사항을 준수하는 오픈소스 프로그램(오픈소스 정책 / 프로세스 / 도구 / 조직)을 구축한 기업은 다음 두가지를 문서화하여 명시할 수 있다.&lt;/p>
&lt;ol>
&lt;li>기업의 오픈소스 프로그램이 ISO/IEC 5230, ISO/IEC DIS 18974 의 모든 요구사항을 충족함&lt;/li>
&lt;li>적합성 인증을 획득한 후 18개월 이상 ISO/IEC 5230, ISO/IEC DIS 18974의 모든 요구 사항을 충족하는 상태 유지를 보장함&lt;/li>
&lt;/ol>
&lt;p>기업은 위의 내용을 오픈소스 정책에 포함시킬 수도 있고, 외부에 공개되어 있는 웹사이트를 통해 게재할 수도 있다.&lt;/p>
&lt;p>아래 이미지와 같이 SK텔레콤에서 오픈소스 포털사이트에 이에 대한 내용을 게재한 것을 참고할 수 있다.
&lt;img src="sktiso.png" alt="">
&lt;a href="https://sktelecom.github.io/compliance/iso5230/">https://sktelecom.github.io/compliance/iso5230/&lt;/a>&lt;/p>
&lt;p>여기까지 완료하면 기업은 드디어 ISO/IEC 5230, ISO/IEC DIS 18974의 모든 요구사항을 충족하게 된다.
&lt;img src="totalno.png" alt="">&lt;/p></description></item><item><title>Guide: [부록1] 오픈소스 정책 (샘플)</title><link>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/7-policy-template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/7-policy-template/</guid><description>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note:&lt;/h4>
&lt;p>This sample open source policy was written with reference to the following two materials.&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://github.com/OpenChain-Project/Reference-Material/blob/master/Open-Source-Policy/Official/2.1/en/Open-Source-Policy-Template-en-OpenChain2.1-ISO5230.xlsx">OpenChain Open Source Policy Template&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/todogroup/policies/blob/master/linuxfoundation/lf_compliance_generic_policy.pdf">Linux Foundation Generic FOSS Policy&lt;/a>&lt;/li>
&lt;/ol>
&lt;/div>
&lt;h2 id="1-목적">1. 목적&lt;/h2>
&lt;h3 id="1-정책의-목적">(1) 정책의 목적&lt;/h3>
&lt;p>이 정책은 OOO 주식회사(이하 &amp;ldquo;회사&amp;quot;라 함)에서 소프트웨어 개발, 서비스, 배포에 관여하는 전체 조직이 올바르게 오픈소스 소프트웨어(이하 &amp;ldquo;오픈소스&amp;quot;라 함)를 활용하기 위해 다음과 같은 원칙을 제공합니다.&lt;/p>
&lt;ol>
&lt;li>오픈소스 컴플라이언스 / 보안 보증 원칙&lt;/li>
&lt;li>외부 오픈소스 프로젝트로의 기여 원칙&lt;/li>
&lt;li>사내 프로젝트를 오픈소스로 공개하기 위한 원칙&lt;/li>
&lt;/ol>
&lt;p>이러한 원칙은 회사의 모든 구성원이 오픈소스의 가치를 이해하고, 오픈소스를 올바르게 사용하며, 오픈소스 커뮤니티에 기여하기 위한 방법을 제공합니다.&lt;/p>
&lt;p>회사의 모든 구성원은 사내 위키의 다음 링크에서 오픈소스 정책을 확인할 수 있습니다 : [internal_link]&lt;/p>
&lt;h3 id="2-미준수-시-영향">(2) 미준수 시 영향&lt;/h3>
&lt;p>이 정책을 준수하지 않는다면 다음과 같은 상황이 발생할 수 있습니다.&lt;/p>
&lt;ul>
&lt;li>외부로부터 오픈소스 라이선스 준수 요구를 받을 수 있습니다.&lt;/li>
&lt;li>회사가 개발한 소스 코드를 원치 않게 공개해야 할 수 있습니다.&lt;/li>
&lt;li>오픈소스 저작권자로부터 법적 소송을 제기당할 수 있습니다.&lt;/li>
&lt;li>저작권 침해 및 계약 위반으로 벌금을 부과받거나, 제품 판매 중지 명령을 받을 수 있습니다.&lt;/li>
&lt;li>회사 평판이 손상될 수 있습니다.&lt;/li>
&lt;li>공급업체와의 계약 위반이 되어 손해배상 청구를 받을 수 있습니다.&lt;/li>
&lt;li>심각한 보안 사고에 노출되어 회사에 막대한 손해를 입힐 수 있습니다.&lt;/li>
&lt;/ul>
&lt;p>이러한 이유로 회사는 오픈소스 정책의 위반을 심각하게 간주하며, 이를 위반하는 구성원이나 조직은 징계 절차에 처할 수 있습니다.&lt;/p>
&lt;h3 id="3-구성원의-기여-방법">(3) 구성원의 기여 방법&lt;/h3>
&lt;p>회사의 모든 구성원은 이 정책의 근거와 내용을 이해하고 필요한 활동을 충실히 수행함으로써 정책의 효과 및 회사의 컴플라이언스 수준 향상에 기여할 수 있습니다.&lt;/p>
&lt;h2 id="2-적용-범위">2. 적용 범위&lt;/h2>
&lt;p>이 정책은 다음 세 부분에 적용됩니다.&lt;/p>
&lt;ol>
&lt;li>회사가 외부로 제공하거나 배포하는 모든 제품에 적용됩니다. 단, 오픈소스를 내부 사용 목적으로만 사용하는 것은 이 정책의 범위에 포함되지 않습니다.&lt;/li>
&lt;li>구성원이 외부 오픈소스 프로젝트에 기여할 때 적용됩니다.&lt;/li>
&lt;li>내부 코드를 오픈소스로 공개할 때 적용됩니다.&lt;/li>
&lt;/ol>
&lt;p>적용 범위는 회사의 비즈니스 환경에 맞추어 변경할 수 있습니다. 특히, 오픈소스 프로그램 매니저는 지속적인 효과를 보장하기 위해 이 정책의 적용되지 않고 사외로 배포 혹은 서비스되는 제품이 있는지 월 1회 이상 조사합니다. 이를 측정하여 1건이라도 발견 시 적용 범위를 변경해야 하는 기준으로 삼습니다.&lt;/p>
&lt;p>적용 범위를 변경하기 위한 절차는 다음과 같습니다.&lt;/p>
&lt;ol>
&lt;li>오픈소스 프로그램 매니저는 신규사업, 조직개편 등 회사의 비즈니스 환경이 변화에 따라 정책의 적용 범위 변경이 필요하다고 판단할 경우, 이를 위한 제안을 OSRB에 제출합니다.&lt;/li>
&lt;li>OSRB에서는 적절한 수준의 적용 범위 변경을 승인합니다.&lt;/li>
&lt;li>OSRB는 오픈소스 정책을 수정하여 정책의 적용 범위를 변경합니다.&lt;/li>
&lt;/ol>
&lt;p>오픈소스 프로그램 매니저는 지속적으로 월 1회 이상 적용 범위를 개선하기 위해 검토, 업데이트 및 검사 이력을 Jira Issue Tracker를 활용하여 문서화합니다.&lt;/p>
&lt;h2 id="3-용어">3. 용어&lt;/h2>
&lt;ul>
&lt;li>SBOM (Software Bill of Materials) : 소프트웨어 구성 요소 목록&lt;/li>
&lt;li>소프트웨어 배포 참여자 : 회사가 소프트웨어를 개발하고 배포, 기여하는 데 관여하는 모든 직원을 의미하며, 소프트웨어 개발자, 배포 엔지니어, 품질 엔지니어 등을 포함합니다.&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;h2 id="4-역할-책임-및-역량">4. 역할, 책임 및 역량&lt;/h2>
&lt;p>정책의 효과를 보장하기 위해 다음과 같이 역할과 책임 및 각 역할의 담당자가 갖추어야 할 역량을 정의합니다.&lt;/p>
&lt;p>각 역할의 담당 조직/담당자와 필요 역량 수준은 [부록 1. 담당자 현황]에서 정의합니다.&lt;/p>
&lt;ul>
&lt;li>오픈소스 프로그램 매니저는 회사의 비즈니스 상황에 맞추어 주기적으로 명단을 업데이트합니다.&lt;/li>
&lt;li>각 역할에 대한 담당 조직의 장은 조직 내 담당자를 지정하고, 담당자가 역할을 충실하게 수행할 수 있는 적절한 시간과 예산을 할당합니다.
&lt;ul>
&lt;li>각 역할의 담당자는 자신이 역할을 수행하면서 적절한 지원이 되지 않는다면 오픈소스 프로그램 매니저에게 문제를 제기해야 합니다.&lt;/li>
&lt;li>오픈소스 프로그램 매니저는 해당 조직장과 문제 해결을 논의합니다. 적절하게 해결되지 않는다면, 오픈소스 프로그램 매니저는 OSRB에 문제 해결을 요청할 수 있습니다.&lt;/li>
&lt;li>OSRB는 상위 조직의 장에게 문제를 공유하고 해결을 요청합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="1-osrb">(1) OSRB&lt;/h3>
&lt;p>OSRB(Open Source Review Board)는 회사의 오픈소스 관리를 위해 오픈소스 프로그램 매니저와 법무팀, 특허팀, 개발팀, 인프라팀 등 관련 조직의 책임자로 구성된 협의체입니다.&lt;/p>
&lt;ul>
&lt;li>OSRB는 오픈소스 관리를 위한 정책과 프로세스를 수립하고, 이를 수행하기 위한 회사 내의 역할과 책임을 정의합니다.&lt;/li>
&lt;li>OSRB는 매년 정기적으로 검토하여 정책과 프로세스를 개선합니다. 모든 개선 과정은 문서화하여 기록합니다.
&lt;ul>
&lt;li>OSRB는 회사의 프로세스 수행 성과와 미흡한 부분, 모범 사례를 분석하고 비즈니스 환경을 반영하여 항상 현행화합니다.&lt;/li>
&lt;li>OSRB는 오픈소스 컴플라이언스를 위한 정책과 프로세스는 오픈소스 프로그램 매니저가 책임을 갖고 관리합니다.&lt;/li>
&lt;li>OSRB는 오픈소스 보안 보증을 위한 정책과 프로세스는 보안 담당이 책임을 갖고 관리합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>OSRB는 회사 내 오픈소스 이슈 발생 시, 해결 방안을 논의하고, 대응책을 마련합니다.&lt;/li>
&lt;li>OSRB는 필요 시, 임원진에 이슈를 보고하여 리스크 완화 방안에 대한 피드백을 받습니다.&lt;/li>
&lt;/ul>
&lt;h3 id="2-오픈소스-프로그램-매니저">(2) 오픈소스 프로그램 매니저&lt;/h3>
&lt;p>오픈소스 프로그램 매니저는 회사의 오픈소스 프로그램에 대한 총괄 책임을 담당합니다. 오픈소스를 사용한 제품과 서비스의 오픈소스 관리 활동을 보장하기 위해 다음 사항에 대한 책임이 있습니다.&lt;/p>
&lt;ul>
&lt;li>오픈소스 컴플라이언스를 위해 필요한 역할을 정의하고, 각 역할을 책임질 담당 조직 및 담당자를 지정합니다. 필요 시 OSRB와 협의합니다. 오픈소스 보안 보증을 위한 내부 책암은 보안 담당자가 할당합니다.&lt;/li>
&lt;li>오픈소스 교육을 주관하고 평가합니다.&lt;/li>
&lt;li>OSRB의 의장을 맡아서 활동을 지휘합니다.&lt;/li>
&lt;li>외부로부터의 오픈소스 사용 및 컴플라이언스 관련 문의 및 요청에 대응합니다.&lt;/li>
&lt;li>오픈소스 사용 요청을 검토하고 승인합니다.&lt;/li>
&lt;li>SBOM 기록을 유지합니다.&lt;/li>
&lt;li>구성원이 오픈소스 관련 자문을 받는 방법을 제공합니다.&lt;/li>
&lt;li>오픈소스 고지 및 소스 코드 공개를 위한 저장소를 유지합니다.&lt;/li>
&lt;/ul>
&lt;h3 id="3-ospo">(3) OSPO&lt;/h3>
&lt;p>OSPO(Open Source Program Office)는 회사 안팎으로 오픈소스 활동의 성장을 위해 지원하고 육성하는 역할을 합니다.&lt;/p>
&lt;ul>
&lt;li>외부 오픈소스 프로젝트로의 코드 기여를 위한 가이드를 제공합니다.&lt;/li>
&lt;li>사내 프로젝트를 오픈소스로 공개하기 위한 가이드를 제공합니다.&lt;/li>
&lt;li>오픈소스 포털을 개발하고 운영합니다.&lt;/li>
&lt;li>오픈소스 도구를 개발하고 선택합니다.&lt;/li>
&lt;li>오픈소스 프로젝트 이벤트를 후원합니다.&lt;/li>
&lt;li>오픈소스 커뮤니티와의 관계를 관리합니다.&lt;/li>
&lt;/ul>
&lt;h3 id="4-법무-담당">(4) 법무 담당&lt;/h3>
&lt;p>법무 담당은 오픈소스 라이선스와 의무를 해석하는 등 오픈소스 활용 과정에서 발생할 수 있는 법적 위험과 완화 방안에 대한 자문을 제공합니다.&lt;/p>
&lt;ul>
&lt;li>구성원이 오픈소스 컴플라이언스 이슈에 대한 문의를 할 수 있는 합리적인 방법을 제공합니다.&lt;/li>
&lt;li>호환되지 않는 오픈소스 라이선스로 인한 충돌을 포함하여 라이선스 및 지식재산권 문제에 대해 자문을 제공합니다.&lt;/li>
&lt;li>외부 오픈소스 프로젝트로의 기여 시 오픈소스 라이선스, CLA(Contributor License Agreement) 등 필요한 법적 사항을 검토합니다.&lt;/li>
&lt;li>이슈가 첨예한 경우, 오픈소스 전문 변호사를 보유한 외부 법무 법인에 자문을 요청합니다.&lt;/li>
&lt;/ul>
&lt;h3 id="5-it-담당">(5) IT 담당&lt;/h3>
&lt;p>IT 담당은 오픈소스 분석 도구를 운영하고 자동화하여 모든 배포용 소프트웨어에 대해 오픈소스 분석이 원활히 수행되도록 시스템을 구축합니다.&lt;/p>
&lt;ul>
&lt;li>오픈소스 분석 도구를 운영합니다.&lt;/li>
&lt;li>DevOps 환경과 통합하여 오픈소스 분석을 자동화합니다.&lt;/li>
&lt;li>모든 배포용 소프트웨어를 대상으로 오픈소스 분석이 수행되도록 시스템과 프로세스를 구축합니다.&lt;/li>
&lt;li>모든 배포용 소프트웨어에 대한 SBOM을 확보하고 유지합니다.&lt;/li>
&lt;/ul>
&lt;h3 id="6-보안-담당">(6) 보안 담당&lt;/h3>
&lt;p>보안 담당은 오픈소스 보안 취약점 분석 도구를 운영하여 모든 배포용 소프트웨어에 대해 보안 취약점 분석이 원활히 수행되도록 시스템을 구축합니다.&lt;/p>
&lt;ul>
&lt;li>오픈소스 보안 보증을 성공할 수 있도록 각 업무에 대한 책임을 할당합니다.&lt;/li>
&lt;li>오픈소스 보안 취약점 분석 도구를 운영합니다.&lt;/li>
&lt;li>DevSecOps 환경과 통합하여 오픈소스 보안 취약점 분석을 자동화합니다.&lt;/li>
&lt;li>모든 배포용 소프트웨어를 대상으로 오픈소스 보안 취약점 분석이 수행되도록 시스템과 프로세스를 구축합니다.&lt;/li>
&lt;li>구성원이 보안 취약점에 대한 문의를 할 수 있는 합리적인 방법을 제공하고, 취약점 해결을 위해 필요 시 외부 전문 기술 자문을 이용합니다.&lt;/li>
&lt;/ul>
&lt;h3 id="7-개발-문화-담당">(7) 개발 문화 담당&lt;/h3>
&lt;p>개발 문화 담당은 사내 개발자들이 오픈소스를 적극적으로 활용하고 사내외 커뮤니티에 참여하여 선진 개발 문화를 습득할 수 있도록 지원합니다.&lt;/p>
&lt;ul>
&lt;li>오픈소스 커뮤니티로의 참여를 장려합니다.&lt;/li>
&lt;li>활발한 외부 오픈소스 프로젝트 활동을 사내 성과로 인정할 수 있는 문화를 조성합니다.&lt;/li>
&lt;li>오픈소스 개발자들에게 매력 있는 회사로 인식될 수 있는 개발 문화를 만들어갑니다.&lt;/li>
&lt;/ul>
&lt;h3 id="8-품질-담당">(8) 품질 담당&lt;/h3>
&lt;p>QA 등 품질을 담당하는 조직은 소프트웨어 배포 시 오픈소스 라이선스 의무를 적절히 수행하였는지 확인합니다.&lt;/p>
&lt;ul>
&lt;li>개발 프로세스 단계에 맞추어 오픈소스 관리 활동이 수행되었는지 확인합니다.&lt;/li>
&lt;li>오픈소스 라이선스가 요구하는 대로 산출물을 생성하였는지 확인합니다.&lt;/li>
&lt;li>소프트웨어 배포 시 오픈소스 고지문과 공개할 소스 코드를 함께 제공하는지 확인합니다.&lt;/li>
&lt;li>이슈가 있으면 소프트웨어 개발/배포 조직에 통보하여 즉시 이슈를 수정하도록 안내합니다.&lt;/li>
&lt;/ul>
&lt;h2 id="5-교육-및-평가">5. 교육 및 평가&lt;/h2>
&lt;p>모든 소프트웨어 배포 참여자는 매년 [Learning Portal]에서 제공하는 오픈소스 의무 교육을 수강해야 합니다. 이를 통해 오픈소스 정책, 관련 교육 정책 및 조회 방법을 숙지합니다. 교육 이력은 [Learning Portal]에 보존합니다.&lt;/p>
&lt;p>4장에서 정의한 각 역할을 담당하는 모든 구성원은 [Learning Portal]에서 제공하는 오픈소스 교육 고급 과정을 수강해야 합니다. 교육 이력과 평가 결과는 [Learning Portal]에 최소 3년간 보존합니다.&lt;/p>
&lt;h2 id="6-오픈소스-사용">6. 오픈소스 사용&lt;/h2>
&lt;p>오픈소스를 사용하여 제품 및 서비스를 개발하고 배포하려면 각 오픈소스 라이선스가 요구하는 의무 사항을 준수해야 합니다. 이를 위한 활동을 오픈소스 컴플라이언스라고 합니다.&lt;/p>
&lt;p>올바른 오픈소스 컴플라이언스 활동을 위해 소프트웨어 개발/배포 조직은 다음 사항을 준수하고 모든 과정은 Jira Tracker에 기록하여 보존합니다.&lt;/p>
&lt;h3 id="1-오픈소스-식별-및-라이선스-의무-사항-검토">(1) 오픈소스 식별 및 라이선스 의무 사항 검토&lt;/h3>
&lt;p>오픈소스를 제품 / 서비스 개발에 도입 시, 먼저 오픈소스 라이선스가 무엇인지 식별하고, 라이선스가 요구하는 의무 사항을 검토하고 확인합니다.&lt;/p>
&lt;p>회사의 [오픈소스 라이선스 가이드]에는 주요 오픈소스 라이선스 목록이 포함되어 있으며, 라이선스마다 다음의 배포 형태별 요구하는 의무사항을 구분하여 설명합니다.&lt;/p>
&lt;ul>
&lt;li>바이너리 형태&lt;/li>
&lt;li>소스 형태&lt;/li>
&lt;li>강한/약한 Copyleft&lt;/li>
&lt;li>SasS 기반 제공&lt;/li>
&lt;li>수정 여부&lt;/li>
&lt;li>저작자 표시 요구 오픈소스 포함 등.&lt;/li>
&lt;/ul>
&lt;p>소프트웨어 개발/배포 조직은 오픈소스 라이선스 의무 검토 시 이 가이드를 참고할 수 있습니다. 이 가이드에서 언급하지 않는 오픈소스 라이선스의 검토가 필요할 경우, 오픈소스 프로그램 매니저에게 문의합니다.&lt;/p>
&lt;h3 id="2-오픈소스-라이선스-고려-설계">(2) 오픈소스 라이선스 고려 설계&lt;/h3>
&lt;p>오픈소스의 결합 관계를 파악하여 자사의 코드가 오픈소스 라이선스의 영향을 받지 않도록 소프트웨어 아키텍처를 설계합니다.&lt;/p>
&lt;p>회사의 [오픈소스 라이선스 가이드]에서는 오픈소스 라이선스별 소스 코드 공개 범위 및 자사 코드의 공개를 방지하기 위한 설계 방법을 설명합니다.&lt;/p>
&lt;h3 id="3-오픈소스-컴플라이언스-산출물-생성">(3) 오픈소스 컴플라이언스 산출물 생성&lt;/h3>
&lt;p>오픈소스 컴플라이언스 활동의 가장 기본은 배포용 소프트웨어에 포함된 오픈소스 현황을 파악하는 것입니다. 이는 바로 오픈소스 컴플라이언스의 핵심인 오픈소스 라이선스 요구사항을 올바르게 충족하기 위해서입니다. 즉, 배포용 소프트웨어에 포함된 오픈소스에 대한 컴플라이언스 산출물 세트를 생성해야 합니다.&lt;/p>
&lt;p>오픈소스 컴플라이언스 산출물은 크게 두 가지로 구분됩니다.&lt;/p>
&lt;ol>
&lt;li>오픈소스 고지문 : 오픈소스 라이선스 전문과 저작권 정보 제공을 위한 문서&lt;/li>
&lt;li>공개할 소스 코드 패키지 : GPL, LGPL 등 소스 코드 공개를 요구하는 오픈소스 라이선스 의무 이행을 위해 공개할 소스 코드를 취합한 패키지&lt;/li>
&lt;/ol>
&lt;p>이러한 컴플라이언스 산출물을 취합, 배포, 보관하기 위해 다음 사항을 준수합니다.&lt;/p>
&lt;ul>
&lt;li>오픈소스 고지문이나 공개할 소스 코드 패키지는 각 라이선스가 요구하는 조건대로 취합합니다. 예를 들어, 라이선스가 라이선스 전체 텍스트의 동봉을 요구하는데, 링크만을 제공해서는 안 됩니다.&lt;/li>
&lt;li>취합한 산출물은 별도의 저장소에 보관합니다.&lt;/li>
&lt;li>공개할 소스 코드를 서면 약정서로 제공할 경우, 취합한 산출물의 저장소를 외부에서 접근할 수 있도록 다운로드 링크를 공개합니다.&lt;/li>
&lt;/ul>
&lt;p>회사의 오픈소스 프로세스를 통해 오픈소스 고지문을 발급하고, 공개할 소스 코드 패키지를 취합할 수 있습니다.&lt;/p>
&lt;h3 id="4-sbom-bill-of-materials-생성">(4) SBOM (Bill of Materials) 생성&lt;/h3>
&lt;p>배포용 소프트웨어에 포함된 오픈소스 현황(BOM : Bill of Materials)을 생성하고 관리해야 합니다.&lt;/p>
&lt;p>회사의 오픈소스 프로세스를 통해 오픈소스 도구를 활용하여 SBOM을 생성하고 보존할 수 있습니다.&lt;/p>
&lt;h3 id="5-컴플라이언스-이슈-대응-절차">(5) 컴플라이언스 이슈 대응 절차&lt;/h3>
&lt;p>컴플라이언스 이슈가 제기될 경우, 오픈소스 프로그램 매니저는 다음의 절차를 수행하여 신속히 대응합니다.&lt;/p>
&lt;ol>
&lt;li>문의 접수를 확인하고 적절한 해결 시간을 명시합니다.&lt;/li>
&lt;li>이슈 내용이 실제 문제를 지적하고 있는지를 확인합니다. (아닐 경우, 이슈 제기자에게 문제가 아님을 알립니다.)&lt;/li>
&lt;li>실제 문제인 경우, 우선순위를 정하고 적절한 대응 방안을 결정합니다.&lt;/li>
&lt;li>대응을 수행하고, 필요할 경우, 오픈소스 프로세스를 적절하게 보완합니다.&lt;/li>
&lt;li>위의 내용은 Jira Tracker를 이용하여 보존합니다.&lt;/li>
&lt;/ol>
&lt;h3 id="6-오픈소스-보안취약점-대응">(6) 오픈소스 보안취약점 대응&lt;/h3>
&lt;ul>
&lt;li>오픈소스 취약점을 식별하고, 심각도를 평가합니다.&lt;/li>
&lt;li>오픈소스 취약점 분석 결과에 따라 취약점을 수정하거나 보안 패치를 적용합니다. 취약점 조치는 취약점의 심각도, 시스템의 중요도, 취약점 수정 또는 보안 패치의 가용성 등을 고려하여 결정합니다.&lt;/li>
&lt;li>새로운 오픈소스 보안 취약점이 발표되는 것을 감시하고, 취약점 발생 시 신속하게 대응합니다. 오픈소스 취약점 모니터링은 CVE와 같은 취약점 데이터베이스, 보안 전문 기관의 웹사이트 등을 통해 수행할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;h2 id="7-오픈소스-기여">7. 오픈소스 기여&lt;/h2>
&lt;p>회사는 오픈소스에서의 비즈니스 가치 창출을 위해 외부 오픈소스 프로젝트로의 참여와 기여를 권장합니다. 그러나 이 과정에서 의도하지 않은 회사의 지식 재산 노출 혹은 제 3자의 권리 침해에 주의해야 합니다. 이를 위해 회사의 구성원이 외부 오픈소스 프로젝트로의 기여를 위해서는 다음 사항을 준수해야 합니다.&lt;/p>
&lt;h3 id="1-리뷰-요청-및-승인">(1) 리뷰 요청 및 승인&lt;/h3>
&lt;p>오픈소스 기여는 저작권 관점에서 저작자가 저작물을 수정/사용/배포할 수 있는 권한을 오픈소스 프로젝트에 부여하는 것입니다. 때에 따라서는 오픈소스 프로젝트에 여러분의 저작권을 양도해야 하기도 합니다. 그런데 일반적으로 고용 기간에 만든 저작물의 저작권은 고용주가 소유합니다. 즉, 회사 구성원이 만든 저작물은 회사가 소유합니다. 구성원이 임의로 저작물을 오픈소스에 기여하는 행위는 불필요한 저작권 침해 이슈를 유발할 수 있습니다.&lt;/p>
&lt;p>따라서, 기여하고자 하는 오픈소스 프로젝트가 있다면 오픈소스 기여 프로세스에 따라 최초 기여하기 전에 리뷰 요청 및 승인 절차를 준수합니다.&lt;/p>
&lt;p>단, 다음과 같이 단순한 내용일 경우, 저작권 침해 리스크가 크지 않기 때문에 리뷰 절차 없이 구성원의 판단에 따라 기여할 수 있습니다.&lt;/p>
&lt;ul>
&lt;li>10 라인 이하의 작은 코드 조각&lt;/li>
&lt;li>Stack Overflow에서의 문의 / 답변&lt;/li>
&lt;li>GitHub에서의 관리 활동 : Issue 생성, Pull Request Review / Approve 등&lt;/li>
&lt;/ul>
&lt;h3 id="2-기여할-권리가-있는-코드만-기여">(2) 기여할 권리가 있는 코드만 기여&lt;/h3>
&lt;p>기여할 권리가 있는 코드만 기여해야 합니다. 즉, 직접 작성한 코드를 기여합니다. 제 3자의 코드를 임의로 기여해서는 안 됩니다.&lt;/p>
&lt;h3 id="3-지식-재산-노출-주의">(3) 지식 재산 노출 주의&lt;/h3>
&lt;p>민감한 정보, 특허 등 회사의 지식재산 노출이 우려되는 코드, 문서는 기여하지 않습니다.&lt;/p>
&lt;p>기여하려는 코드에 회사의 특허가 포함되어 있다면, 이 특허를 오픈소스 라이선스로 프로젝트에 기여해도 되는지 확인해야 합니다. 모호한 부분이 있다면 OSPO에 문의합니다.&lt;/p>
&lt;h3 id="4-cla-서명-주의">(4) CLA 서명 주의&lt;/h3>
&lt;p>어떤 오픈소스 프로젝트는 모든 기여자에게 CLA(Contributor License Agreement)에 서명할 것을 요구합니다. 이는 프로젝트가 여러 기여자의 저작물을 관리하면서 발생할 수 있는 저작권 분쟁을 줄이기 위해 기여자들에게 동의를 구하는 약정서입니다. 보통 대기업이 주도하는 프로젝트에서 CLA에 서명할 것을 요구합니다.&lt;/p>
&lt;p>CLA는 프로젝트마다 다르지만 주로 다음 사항을 동의한다는 내용을 담고 있습니다.&lt;/p>
&lt;ul>
&lt;li>나(또는 소속 회사)는 내가 기여하려고 하는 기여물을 프로젝트에 기여할 권리가 있다. (즉, 이 기여물의 저작자이다.)&lt;/li>
&lt;li>나(또는 소속 회사)는 나의 기여물을 프로젝트가 수정, 배포, 관리할 수 있는 권한을 프로젝트에 부여한다.&lt;/li>
&lt;li>나(또는 소속 회사)는 부여한 권한을 철회하지 않는다.&lt;/li>
&lt;li>나(또는 소속 회사)는 프로젝트가 향후 필요에 따라 라이선스를 변경할 수 있는 권한을 프로젝트에 부여한다.&lt;/li>
&lt;/ul>
&lt;p>또한, 드문 경우지만, 어떤 CLA는 다음과 같은 조건에 대해서도 동의를 요구한다.&lt;/p>
&lt;ul>
&lt;li>나(또는 소속 회사)는 나의 기여물을 기여함과 동시에 나의 저작권을 프로젝트 또는 프로젝트 관리 조직으로 양도한다.&lt;/li>
&lt;/ul>
&lt;p>회사는 자사의 지식재산 보호를 위해 저작권 양도를 요구하는 오픈소스 프로젝트로의 기여는 허용하지 않습니다. 이러한 판단을 위해 회사의 구성원은 기여하려는 오픈소스 프로젝트에서 CLA 서명을 요구할 경우, 서명하기 전에 반드시 OSPO에 리뷰를 요청한다.&lt;/p>
&lt;h3 id="5-저작권-표시">(5) 저작권 표시&lt;/h3>
&lt;p>구성원이 재직 기간에 생성한 저작물의 지식재산은 기본적으로 회사가 소유합니다. 따라서, 구성원은 외부 오픈소스 프로젝트에 코드를 기여할 때 회사의 저작권을 표기해야 합니다.&lt;/p>
&lt;p>하나 이상의 파일을 기여할 때, 다음과 같이 파일 상단에 저작권과 라이선스를 표기합니다.&lt;/p>
&lt;pre>&lt;code>Copyright (c) {$year} {$Company}
SPDX-License-Identifier: {$SPDX_license_name}
&lt;/code>&lt;/pre>&lt;p>여기서 $SPDX_license_name은 해당 오픈소스 프로젝트의 라이선스 정책에 따라 작성합니다.&lt;/p>
&lt;p>단, 버그 수정 등의 목적으로 기존 코드를 수정하는 정도라면 해당 코드 수정에 대해 저작권을 표기할 필요는 없습니다.&lt;/p>
&lt;h3 id="6-회사-이메일-사용">(6) 회사 이메일 사용&lt;/h3>
&lt;p>오픈소스 프로젝트에 기여할 때는 개인 이메일을 사용하지 말고, 회사 이메일을 사용합니다. 이를 통해 (1) 구성원은 회사를 대표하여 커뮤니티와 커뮤니케이션한다는 책임감을 갖게 되고, (2) 회사가 오픈소스 커뮤니티에 기여 활동을 활발히 하는 회사로 인지도를 개선할 수 있습니다.&lt;/p>
&lt;h2 id="8-오픈소스-공개">8. 오픈소스 공개&lt;/h2>
&lt;p>회사는 오픈소스 커뮤니티와의 협업의 가치를 존중하고, 이를 내부 소프트웨어를 오픈소스 프로젝트로의 공개를 장려합니다. 하지만, 회사의 지식재산 보호와 의도치 않은 저작권 침해를 방지하기 위해 준수해야 할 몇 가지 규칙이 있습니다.&lt;/p>
&lt;h3 id="1-승인">(1) 승인&lt;/h3>
&lt;p>오픈소스 공개는 저작권 관점에서 저작자가 저작물을 누구나 수정/사용/배포할 수 있는 권한을 오픈소스 라이선스를 통해 부여하는 것입니다. 일반적으로 고용 기간에 만든 저작물의 저작권은 고용주가 소유합니다. 즉, 회사 구성원이 만든 저작물은 회사가 소유합니다. 구성원이 임의로 저작물을 오픈소스로 공개하는 행위는 불필요한 저작권 침해 이슈를 유발할 수 있습니다.&lt;/p>
&lt;p>따라서, 소프트웨어를 오픈소스로 공개하고자 한다면 회사 오픈소스 공개 정책에 따라 리뷰 요청 및 승인 절차를 따릅니다.&lt;/p>
&lt;p>공개하는 과정에서 어느 것이라도 무언가 바람직하지 않아 보이는 상황이 있다면 주저하지 말고 OSPO에 문의합니다.&lt;/p>
&lt;h3 id="2-공개할-권리가-있는-코드만-공개">(2) 공개할 권리가 있는 코드만 공개&lt;/h3>
&lt;p>오픈소스 프로젝트에서 발생할 수 있는 최악의 상황 중 하나는 법적으로 문제가 있는 코드가 프로젝트에 포함되는 것입니다. 회사가 배포할 권리가 없는 코드이거나, 다른 회사의 특허와 같은 IP를 침해하는 코드가 법적인 문제를 유발할 수 있습니다. 따라서, 공개할 코드를 준비하면서 모든 코드의 출처를 확인하고 문제 소지가 있는 코드는 삭제합니다.&lt;/p>
&lt;h3 id="3-지식-재산-노출에-주의">(3) 지식 재산 노출에 주의&lt;/h3>
&lt;p>민감한 정보, 특허 등 기업의 지식재산 노출이 우려되는 코드, 문서는 공개하지 않습니다.&lt;/p>
&lt;p>공개하려는 코드에 회사의 특허가 포함되어 있다면, 이 특허를 오픈소스 라이선스로 공개해도 되는지 확인합니다. 모호한 부분이 있다면 OSPO에 문의합니다.&lt;/p>
&lt;h3 id="4-유용한-코드-공개">(4) 유용한 코드 공개&lt;/h3>
&lt;p>성공적인 프로젝트가 되기 위해서는 다른 사람들에게도 유용해야 합니다. 만약, 유사한 프로젝트가 이미 존재한다면, 새로운 프로젝트를 만드는 것보다 기존의 프로젝트에 참여합니다.&lt;/p>
&lt;p>공개하려는 오픈소스가 (1) 오픈소스 커뮤니티에 차별화된 가치를 제공하고, (2) 커뮤니티가 해결되지 못했던 문제를 해결하며, (3) 우리의 기술력을 공개함으로 긍정적인 관심을 끌 수 있는 프로젝트가 되기를 기대할 수 있어야 합니다.&lt;/p>
&lt;ul>
&lt;li>실제 제품이나 서비스에 사용하지 못한 코드라면 오픈소스로도 공개하지 않습니다.&lt;/li>
&lt;li>오픈소스 커뮤니티에서 이미 해결한 문제를 다루는 코드는 공개하지 않습니다. 이런 경우라면, 기존의 오픈소스 프로젝트에 기여합니다.&lt;/li>
&lt;/ul>
&lt;h3 id="5-리소스-확보">(5) 리소스 확보&lt;/h3>
&lt;p>프로젝트에 투입해야 할 리소스를 확보합니다.&lt;/p>
&lt;ul>
&lt;li>초기에는 일반적인 사내 프로젝트와 비슷한 수준의 개발자가 필요합니다.&lt;/li>
&lt;li>외부의 기여를 신속하게 리뷰할 수 있는 개발자가 필요합니다.&lt;/li>
&lt;li>법무팀과 마케팅팀의 역할도 필요합니다.&lt;/li>
&lt;/ul>
&lt;p>프로젝트를 유지하고 관리하는 데 필요한 인프라에 대한 예산을 확보합니다. 여기에는 GitHub와 같은 프로젝트 호스팅 도구가 포함됩니다.
충분한 리소스를 지원할 수 있는 환경을 조성할 수 없다면 오픈소스로 공개하지 않습니다.&lt;/p>
&lt;h3 id="6-회사-이메일-사용-1">(6) 회사 이메일 사용&lt;/h3>
&lt;p>오픈소스 공개 활동 시 개인 이메일을 사용하지 말고 회사 이메일을 사용합니다. 이를 통해 다음과 같은 이점이 있습니다.&lt;/p>
&lt;ul>
&lt;li>구성원은 회사를 대표하여 커뮤니티와 커뮤니케이션한다는 책임감을 갖게 됩니다.&lt;/li>
&lt;li>회사는 오픈소스 커뮤니티에 공개 활동을 활발히 하는 기업으로 인지도를 개선할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;h2 id="9-외부-문의-대응">9. 외부 문의 대응&lt;/h2>
&lt;h3 id="1-외부-문의-대응-책임">(1) 외부 문의 대응 책임&lt;/h3>
&lt;p>외부로부터 오픈소스에 대한 문의 및 요청에 대한 대응은 오픈소스 프로그램 매니저가 담당합니다.&lt;/p>
&lt;ul>
&lt;li>오픈소스 프로그램 매니저는 회사 내의 적절한 인원에게 문의에 대한 전체 또는 일부의 처리를 할당할 수 있습니다. 필요할 경우 법률 담당자에게 문의하여 처리합니다.&lt;/li>
&lt;li>외부로부터 오픈소스에 대한 문의를 받은 사람은 누구나 이를 오픈소스 프로그램 매니저에게 알려서 신속한 대응이 될 수 있게 합니다.&lt;/li>
&lt;/ul>
&lt;h3 id="2-연락처-공개">(2) 연락처 공개&lt;/h3>
&lt;p>오픈소스 프로그램 매니저는 외부에서 오픈소스 관련한 문의 및 요청을 할 수 있도록 담당자의 연락처를 공개적으로 제공합니다.&lt;/p>
&lt;ul>
&lt;li>오픈소스 고지문에 연락받을 수 있는 이메일 주소 정보를 제공합니다.&lt;/li>
&lt;li>오픈소스 웹사이트에 이메일 주소 정보를 제공합니다.&lt;/li>
&lt;li>Linux Foundation의 Open Compliance Directory에 연락처를 등록합니다.&lt;/li>
&lt;/ul>
&lt;h3 id="3-외부-문의-대응-절차">(3) 외부 문의 대응 절차&lt;/h3>
&lt;p>외부로부터의 오픈소스 문의에 신속하고 정확하게 대응한다면 클레임이나 법적 소송 위험을 크게 줄일 수 있습니다. 이를 위해 회사는 외부의 오픈소스 문의에 대응하기 위해 회사의 오픈소스 프로세스에서 정의한 외부 문의 대응 절차를 준수합니다.&lt;/p>
&lt;h2 id="10-iso-표준-준수-선언과-유지">10. ISO 표준 준수 선언과 유지&lt;/h2>
&lt;p>회사는 소프트웨어 공급망에서의 오픈소스 컴플라이언스 수준 향상을 위해 Linux Foundation의 OpenChain 프로젝트의 정신을 지지하며 적극적으로 참여합니다.&lt;/p>
&lt;ul>
&lt;li>회사는 이 오픈소스 정책을 적용하여 2021년 10월 1일부로 ISO/IEC 5230:2020을 준수함을 보장합니다.&lt;/li>
&lt;li>회사는 적합성 인증을 획득한 후 18개월 이상 OpenChain 규격 버전 2.1, ISO/IED 5230:2020의 모든 요구사항을 충족함을 보장합니다.&lt;/li>
&lt;li>회사는 최소 18개월 간격으로 적합성을 검토하고 필요에 따라 정책을 변경 및 갱신합니다.&lt;/li>
&lt;/ul>
&lt;h2 id="appendix-1-담당자-현황">Appendix 1. 담당자 현황&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>No&lt;/th>
&lt;th style="text-align:left">역할&lt;/th>
&lt;th style="text-align:left">책임&lt;/th>
&lt;th style="text-align:left">필요 역량&lt;/th>
&lt;th style="text-align:left">담당 조직&lt;/th>
&lt;th style="text-align:left">담당자&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td style="text-align:left">Open Source Program Manager&lt;/td>
&lt;td style="text-align:left">회사의 오픈소스 프로그램에 대한 총괄 책임을 담당한다.&lt;/td>
&lt;td style="text-align:left">1. 소프트웨어 개발 프로세스 이해&lt;br>2. 저작권, 특허 등 오픈소스 라이선스와 관련한 지식재산 이해&lt;br>3. 오픈소스 컴플라이언스에 대한 전문 지식&lt;br>4. 오픈소스 개발 경험&lt;br>5. 커뮤니케이션 스킬&lt;/td>
&lt;td style="text-align:left">CTO&lt;/td>
&lt;td style="text-align:left">OOO&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td style="text-align:left">법무 담당&lt;/td>
&lt;td style="text-align:left">오픈소스 라이선스와 의무를 해석한다. 이러한 의무를 실제 이행하는 등 오픈소스 활용을 위해 발생할 수 있는 법적 위험의 완화를 위한 자문을 제공한다.&lt;/td>
&lt;td style="text-align:left">1. 오픈소스 생태계에 대한 기본 지식&lt;br>2. 소프트웨어 저작권에 대한 전문 지식&lt;br>3. 오픈소스 라이선스에 대한 전문 지식&lt;/td>
&lt;td style="text-align:left">법무팀&lt;/td>
&lt;td style="text-align:left">OOO&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&lt;/td>
&lt;td style="text-align:left">IT 담당&lt;/td>
&lt;td style="text-align:left">오픈소스 분석 도구를 운영하고 자동화하여 모든 배포용 소프트웨어에 대해 오픈소스 분석이 원활히 수행되도록 시스템을 구축한다.&lt;/td>
&lt;td style="text-align:left">1. 오픈소스 컴플라이언스 프로세스에 기본 지식&lt;br>2. 오픈소스 분석 도구에 대한 이해&lt;br>3. IT 인프라에 대한 전문 지식&lt;/td>
&lt;td style="text-align:left">IT 인프라팀&lt;/td>
&lt;td style="text-align:left">OOO&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&lt;/td>
&lt;td style="text-align:left">보안 담당&lt;/td>
&lt;td style="text-align:left">오픈소스 보안취약점 분석 도구를 운영하여 모든 배포용 소프트웨어에 대해 보안취약점 분석이 수행되도록 시스템을 구축하고 발견된 보안취약점이 기준에 맞게 보완되도록 조치한다.&lt;/td>
&lt;td style="text-align:left">1. DevSecOps에 대한 폭넓은 이해&lt;br>2. 오픈소스 보안취약점 분석 도구에 대한 이해&lt;br>3. 오픈소스 보안취챡점에 대한 전문 지식&lt;br>43. 커뮤니케이션 스킬&lt;/td>
&lt;td style="text-align:left">보안팀&lt;/td>
&lt;td style="text-align:left">OOO&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>5&lt;/td>
&lt;td style="text-align:left">개발 문화 담당&lt;/td>
&lt;td style="text-align:left">사내 개발자들이 오픈소스를 적극적으로 활용하고 사내외 커뮤니티에 참여하여 선진 개발 문화를 습득할 수 있도록 지원한다.&lt;/td>
&lt;td style="text-align:left">1. 소프트웨어 개발 프로세스 이해&lt;br>2. 오픈소스 컴플라이언스에 대한 기본 지식&lt;br>3. 오픈소스 정책에 대한 이해&lt;/td>
&lt;td style="text-align:left">DR&lt;/td>
&lt;td style="text-align:left">OOO&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>6&lt;/td>
&lt;td style="text-align:left">사업 부서&lt;/td>
&lt;td style="text-align:left">소프트웨어 개발/배포 조직은 올바른 오픈소스 활용을 위해 오픈소스 정책 및 프로세스를 준수한다.&lt;/td>
&lt;td style="text-align:left">1. 소프트웨어 개발 프로세스 이해&lt;br>2. 오픈소스 컴플라이언스에 대한 기본 지식&lt;br>3. 오픈소스 정책에 대한 이해&lt;br>4. 오픈소스 라이선스에 대한 기본 지식&lt;/td>
&lt;td style="text-align:left">개발팀&lt;/td>
&lt;td style="text-align:left">전원&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Guide: [부록2] 오픈소스 프로세스 (샘플)</title><link>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/8-process-template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openChain-project.github.io/OpenChain-KWG/guide/opensource_for_enterprise/8-process-template/</guid><description>
&lt;p>OOO 회사(이하 &amp;ldquo;회사&amp;quot;라 함)는 소프트웨어를 포함하는 제품과 서비스를 개발하면서 오픈소스 소프트웨어를 적극적으로 활용합니다. 회사는 오픈소스 리스크를 최소화하기 위해 소프트웨어를 배포하면서 (1) 오픈소스 라이선스가 부과하는 의무사항을 준수하기 위한 활동과 (2) 오픈소스 보안 취약점을 검출하고 후속 조치를 위한 적절한 활동을 수행해야 합니다. 이러한 활동을 보장하기 위해 오픈소스 프로세스를 따릅니다.&lt;/p>
&lt;h2 id="1-오픈소스-프로세스">1. 오픈소스 프로세스&lt;/h2>
&lt;p>오픈소스 프로세스는 회사가 소프트웨어 제품 및 서비스를 개발하고 배포하기 위한 각 개발 단계에 맞게 오픈소스 라이선스 의무 준수와 오픈소스 보안 취약점 해결을 위해 수행해야 할 절차를 정의합니다. 소프트웨어 제품 개발/배포에 관여하는 모든 구성원은 다음의 오픈소스 프로세스 11단계를 준수합니다.&lt;/p>
&lt;p>&lt;img src="process.png" alt="process">&lt;/p>
&lt;p>회사는 오픈소스 프로세스를 통해 오픈소스 리스크를 최소화하고, 고객에게 안전하고 안정적인 소프트웨어 제품과 서비스를 제공하기 위해 노력합니다.&lt;/p>
&lt;h3 id="1-오픈소스-식별subidentification-of-open-sourcesub">(1) 오픈소스 식별&lt;sub>Identification of Open Source&lt;/sub>&lt;/h3>
&lt;p>사업 부서는 소프트웨어 설계 단계에서 다음 사항을 준수합니다.&lt;/p>
&lt;ul>
&lt;li>소프트웨어를 설계하면서 예측 가능한 오픈소스 사용 현황을 파악하고 라이선스를 확인합니다.&lt;/li>
&lt;li>오픈소스 라이선스별 의무 사항을 확인합니다. 라이선스별 의무 사항은 회사의 오픈소스 라이선스 가이드에서 확인할 수 있습니다. (insert_link)&lt;/li>
&lt;li>각 오픈소스 라이선스의 소스 코드 공개 범위를 고려하여 소프트웨어를 설계합니다.&lt;/li>
&lt;/ul>
&lt;p>오픈소스 프로그램 매니저는 주요 오픈소스 라이선스 의무, 제한, 권리에 대한 가이드를 작성하고 공개하여 전사의 사업 부서에서 참고할 수 있도록 합니다. 이 가이드에는 일반적인 오픈소스 라이선스의 사용 사례가 관리될 수 있도록 다음과 같은 사용 사례가 포함되어야 합니다.&lt;/p>
&lt;ul>
&lt;li>바이너리 형태로 배포&lt;/li>
&lt;li>소스 형태로 배포&lt;/li>
&lt;li>추가 라이선스 의무를 유발하는 다른 오픈소스와 통합&lt;/li>
&lt;li>수정된 오픈소스 포함&lt;/li>
&lt;/ul>
&lt;p>사업 부서는 회사 규칙에 맞게 소스 코드에 저작권 및 라이선스를 표기합니다. 회사의 소스 코드 내 저작권 및 라이선스 표기 규칙은 다음 페이지에서 확인할 수 있습니다. (insert_link)&lt;/p>
&lt;p>사업 부서는 새로운 오픈소스 도입 검토 시, 먼저 라이선스를 식별합니다. 회사의 오픈소스 라이선스 가이드에 따라 라이선스 의무, 제한 및 권리를 확인합니다. 회사의 오픈소스 라이선스 가이드에서 설명하지 않는 라이선스일 경우, 오픈소스 프로그램 매니저에게 도입 가능 여부 및 주의 사항을 문의합니다. Jira Ticket을 생성하여 문의합니다.&lt;/p>
&lt;p>오픈소스 프로그램 매니저는 오픈소스 라이선스 의무를 분석하여 소프트웨어 개발 조직에 안내합니다.&lt;/p>
&lt;ul>
&lt;li>의문이 있는 경우, 법무 담당에 자문을 요청하여 명확한 가이드를 제공합니다.&lt;/li>
&lt;li>새롭게 분석한 라이선스 정보는 전사 라이선스 가이드에 반영합니다.&lt;/li>
&lt;/ul>
&lt;p>보안 담당은 회사의 보안 보증을 위한 가이드를 제공합니다.&lt;/p>
&lt;h3 id="2-소스-코드-검사subauditing-source-codesub">(2) 소스 코드 검사&lt;sub>Auditing Source Code&lt;/sub>&lt;/h3>
&lt;p>사업 부서는 IT 담당자의 안내에 따라 오픈소스 점검을 요청하고 소스 코드를 제공합니다.&lt;/p>
&lt;p>IT 담당은 오픈소스 분석 도구를 사용하여 오픈소스 점검을 하고, SBOM(Software Bill of Materials)을 생성합니다.&lt;/p>
&lt;p>오픈소스 프로그램 매니저는 오픈소스 라이선스 의무 준수 가능 여부, 오픈소스 라이선스 충돌 여부를 검토하고, 이슈가 있으면 사업 부서에 해결을 요청합니다. 이슈 사항은 Jira Ticket으로 생성하여 사업 부서에 할당합니다.&lt;/p>
&lt;p>보안 담당은 검출된 알려진 취약점을 검토하고 사전 정의한 Risk 분류 기준에 따라 사업 부서에 대응 가이드를 제공합니다. Risk는 CVSS(Common Vulnerability Scoring System) Score로 분류하며, Critical Risk는 1주 이내 조치할 수 있는 계획을 수립하도록 안내합니다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Risk&lt;/th>
&lt;th style="text-align:center">CVSS 2.0&lt;/th>
&lt;th style="text-align:center">CVSS 3.0&lt;/th>
&lt;th style="text-align:center">조치 권고 일정&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Low&lt;/td>
&lt;td style="text-align:center">0.0 - 3.9&lt;/td>
&lt;td style="text-align:center">0.0 - 3.9&lt;/td>
&lt;td style="text-align:center">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Medium&lt;/td>
&lt;td style="text-align:center">4.0 - 6.9&lt;/td>
&lt;td style="text-align:center">4.0 - 6.9&lt;/td>
&lt;td style="text-align:center">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Hgh&lt;/td>
&lt;td style="text-align:center">7.0 - 10.0&lt;/td>
&lt;td style="text-align:center">7.0 - 8.9&lt;/td>
&lt;td style="text-align:center">4주 이내&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Critical&lt;/td>
&lt;td style="text-align:center">-&lt;/td>
&lt;td style="text-align:center">9.0 - 10.0&lt;/td>
&lt;td style="text-align:center">1주 이내&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="3-문제-해결subresolving-issuessub">(3) 문제 해결&lt;sub>Resolving Issues&lt;/sub>&lt;/h3>
&lt;p>사업 부서는 소스 코드 검사 단계에서 발견된 모든 문제를 해결합니다. 이슈가 된 오픈소스를 제거하거나, 다른 라이선스 하의 오픈소스로 교체하거나, 알려진 취약점이 수정된 버전으로 교체하는 등의 조치를 취합니다.&lt;/p>
&lt;p>사업 부서는 발견된 모든 이슈를 해결하면 Jira Ticket 이슈를 Resolve하고, 재검토를 요청합니다.&lt;/p>
&lt;h3 id="4-검토subreviewssub">(4) 검토&lt;sub>Reviews&lt;/sub>&lt;/h3>
&lt;p>오픈소스 프로그램 매니저는 모든 이슈가 적절하게 보완되었는지 검토합니다. 필요할 경우, 오픈소스 분석 도구를 사용하여 소스 코드 검사를 재수행합니다.&lt;/p>
&lt;p>보안 담당은 심각한 취약점이 모두 해결되었는지 검토합니다. 해결하기 어려운 취약점이 남아 있을 경우, 비즈니스 형태와 서비스 노출 현황 등을 고려하여 승인 가능 여부를 검토합니다.&lt;/p>
&lt;h3 id="5-승인subapprovalsub">(5) 승인&lt;sub>Approval&lt;/sub>&lt;/h3>
&lt;p>오픈소스 프로그램 매니저는 오픈소스 컴플라이언스 절차가 적절하게 수행되었는지 최종 승인하거나 거절합니다. 거절 시에는 이유에 대한 설명과 수정 방법을 사업 부서에 제안합니다.&lt;/p>
&lt;h3 id="6-등록subregistrationsub">(6) 등록&lt;sub>Registration&lt;/sub>&lt;/h3>
&lt;p>오픈소스 프로그램 매니저는 소프트웨어의 버전별 오픈소스 사용 목록을 추적하기 위한 BOM을 확정한다.&lt;/p>
&lt;p>IT 담당은 확정된 BOM을 시스템에 등록한다. BOM에는 배포용 소프트웨어에 포함된 오픈소스 목록과 다음과 같은 정보를 포함한다.&lt;/p>
&lt;ul>
&lt;li>배포용 소프트웨어의 제품(혹은 서비스) 이름과 버전&lt;/li>
&lt;li>오픈소스 목록
&lt;ul>
&lt;li>오픈소스 이름 / 버전&lt;/li>
&lt;li>오픈소스 라이선스&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>오픈소스 프로그램 매니저는 소프트웨어의 버전별 오픈소스 사용 목록을 추적하기 위한 BOM을 확정합니다.&lt;/p>
&lt;p>IT 담당은 확정된 BOM을 시스템에 등록합니다. BOM에는 배포용 소프트웨어에 포함된 오픈소스 목록과 다음과 같은 정보를 포함합니다.&lt;/p>
&lt;ul>
&lt;li>배포용 소프트웨어의 제품(혹은 서비스) 이름과 버전&lt;/li>
&lt;li>오픈소스 목록
&lt;ul>
&lt;li>오픈소스 이름/버전&lt;/li>
&lt;li>오픈소스 라이선스&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="7-고지subnoticessub">(7) 고지&lt;sub>Notices&lt;/sub>&lt;/h3>
&lt;p>오픈소스 프로그램 매니저는 고지 의무를 준수하기 위해 오픈소스 고지문을 생성합니다. 오픈소스 고지문에는 다음과 같은 내용이 포함됩니다.&lt;/p>
&lt;ul>
&lt;li>오픈소스 관련 문의할 수 있는 오픈소스 연락처&lt;/li>
&lt;li>오픈소스별 고지 내용
&lt;ul>
&lt;li>저작권&lt;/li>
&lt;li>오픈소스 라이선스 이름&lt;/li>
&lt;li>오픈소스 라이선스 사본&lt;/li>
&lt;li>(해당하는 경우) 소스 코드 사본을 얻을 수 있는 서면 약정 (Written Offer)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>오픈소스 프로그램 매니저는 오픈소스 고지문을 생성하여 사업 부서에 전달합니다. 이때 소스 코드 공개가 필요할 경우 사업 부서에 공개할 소스 코드 취합 방법을 안내합니다.&lt;/p>
&lt;p>사업 부서는 오픈소스 고지문을 제품 배포 시 동봉합니다. 화면이 있는 제품일 경우, 사용자가 메뉴를 통해 확인할 수 있도록 조치합니다. (예: 앱 &amp;gt; 메뉴 &amp;gt; 설정 &amp;gt; 저작권 정보 &amp;gt; 오픈소스 라이선스)&lt;/p>
&lt;p>사업 부서는 GPL, LGPL 등 소스 코드 공개를 요구하는 라이선스 하의 오픈소스를 사용하였을 경우, 이에 대한 소스 코드 공개 범위를 확인하여 공개할 소스 코드를 취합합니다.&lt;/p>
&lt;ul>
&lt;li>GPL, LGPL 등의 라이선스 의무 준수를 위해 취합한 소스 코드는 제품에 탑재된 바이너리를 구성하는 소스 코드와 일치해야 합니다. 즉, 취합한 소스 코드를 빌드하면 제품에 탑재된 바이너리와 동일해야 합니다.&lt;/li>
&lt;/ul>
&lt;h3 id="8-배포-전-확인subpre-distribution-verificationssub">(8) 배포 전 확인&lt;sub>Pre-Distribution Verifications&lt;/sub>&lt;/h3>
&lt;p>사업 부서는 오픈소스 컴플라이언스 활동이 적절히 수행되었음을 입증하는 다음의 산출물을 제출합니다.&lt;/p>
&lt;ol>
&lt;li>제품에 포함한 최종 오픈소스 고지문&lt;/li>
&lt;li>제품에 오픈소스 고지문이 포함되었음을 확인하는 자료 (예: 오픈소스 고지문을 보여주는 화면 캡처 이미지)&lt;/li>
&lt;li>(해당할 경우) 공개할 소스 코드 (하나의 파일로 압축하여 제출)&lt;/li>
&lt;/ol>
&lt;p>오픈소스 프로그램 매니저는 사업 부서가 제출한 자료를 검토하여 이상 여부를 확인합니다.&lt;/p>
&lt;h3 id="9-배포subdistributionsub">(9) 배포&lt;sub>Distribution&lt;/sub>&lt;/h3>
&lt;p>오픈소스 프로그램 매니저는 사업 부서가 제출한 컴플라이언스 산출물을 IT 담당자에게 제출합니다.&lt;/p>
&lt;p>IT 담당은 컴플라이언스 산출물을 회사의 오픈소스 배포 사이트에 등록합니다.&lt;/p>
&lt;h3 id="10-최종-확인subfinal-verificationssub">(10) 최종 확인&lt;sub>Final Verifications&lt;/sub>&lt;/h3>
&lt;p>오픈소스 프로그램 매니저는 컴플라이언스 산출물이 이상 없이 회사의 오픈소스 포털에 등록되었는지, 외부에서 이상 없이 다운로드가 되는지 등 종합적인 확인을 합니다.&lt;/p>
&lt;h3 id="11-모니터링submonitoringsub">(11) 모니터링&lt;sub>Monitoring&lt;/sub>&lt;/h3>
&lt;p>오픈소스 프로그램 매니저는 오픈소스 컴플라이언스 산출물 생성이 미흡한 제품이 있는지 주기적으로 확인합니다. 그리고, 외부 문의에 신속하게 대응하기 위한 프로세스를 운영합니다. 외부 문의 대응 프로세스의 자세한 절차는 [2. 외부 문의 대응 프로세스]를 따릅니다.&lt;/p>
&lt;p>보안 담당은 새롭게 알려진 취약점을 모니터링하고 대응하기 위한 프로세스를 운영합니다. 신규 보안 취약점 대응 프로세스의 자세한 절차는 [3. 신규 보안 취약점 대응 프로세스]를 따릅니다.&lt;/p>
&lt;h2 id="2-외부-문의-대응-프로세스">2. 외부 문의 대응 프로세스&lt;/h2>
&lt;p>외부로부터의 오픈소스 컴플라이언스 문의에 신속하고 정확하게 대응한다면 소송까지 진행되는 위험을 크게 줄일 수 있다. 이를 위해 기업은 외부의 오픈소스 컴플라이언스 문의에 대응하기 위해 다음과 같은 프로세스를 준수한다.&lt;/p>
&lt;p>&lt;img src="general-inquiry-process.png" alt="general-inquiry-process">&lt;/p>
&lt;h3 id="1-접수-알림subacknowledgesub">(1) 접수 알림&lt;sub>Acknowledge&lt;/sub>&lt;/h3>
&lt;p>오픈소스 프로그램 매니저는 문의를 받은 즉시 요청자에게 문의가 접수되었음을 알립니다. 이때 조치 예정일을 함께 알립니다. 요청자의 의도가 무엇인지 정확히 파악하는 것이 중요하기 때문에 문의가 불명확한 경우 추가 설명을 요청합니다.&lt;/p>
&lt;p>대응이 필요한 문의 및 요청의 주요 내용은 아래와 같습니다.&lt;/p>
&lt;ul>
&lt;li>특정 제품 및 서비스에 오픈소스가 사용되었는지 문의&lt;/li>
&lt;li>서면 약정(Written Offer)에 언급된 GPL, LGPL 라이선스 하의 소스 코드 제공 요청&lt;/li>
&lt;li>오픈소스 고지문에 명시되지 않았지만, 제품에서 발견된 오픈소스에 대한 해명 및 소스 코드 공개 요청&lt;/li>
&lt;li>GPL, LGPL 등의 의무로 공개된 소스 코드에 누락된 파일 및 빌드 방법 제공 요청&lt;/li>
&lt;li>저작권 표시 요청&lt;/li>
&lt;/ul>
&lt;p>오픈소스 프로그램 매니저는 접수한 요청에 대한 Jira Issue를 생성하여 대응 상황을 모두 자세히 기록합니다.&lt;/p>
&lt;h3 id="2-조사-알림subinformsub">(2) 조사 알림&lt;sub>Inform&lt;/sub>&lt;/h3>
&lt;p>오픈소스 프로그램 매니저는 요청자에게 오픈소스 컴플라이언스를 충실히 수행하고 있음과 요청자의 문의를 조사하고 있음을 알립니다. 내부 조사 진행 상황이 업데이트될 때마다 알리는 것이 좋습니다.&lt;/p>
&lt;h3 id="3-내부-조사subinvestigatesub">(3) 내부 조사&lt;sub>Investigate&lt;/sub>&lt;/h3>
&lt;p>오픈소스 프로그램 매니저는 요청 사항에 대한 내부 조사를 진행합니다. 문제가 된 제품의 버전에 대하여 컴플라이언스 프로세스가 적절하게 수행되었는지 BOM 및 문서화된 검토 이력을 통해 확인합니다. 필요 시 법무 담당에 자문을 요청합니다.&lt;/p>
&lt;p>특정 사업 부서에서 확인이 필요한 사항일 경우 오픈소스 프로그램 매니저는 사업 부서에 조사를 요청합니다. 조사를 요청받은 사업 부서는 컴플라이언스 산출물에 문제가 있는지 즉시 확인하고 결과를 오픈소스 프로그램 매니저에게 보고합니다.&lt;/p>
&lt;h3 id="4-요청자에게-보고subreportsub">(4) 요청자에게 보고&lt;sub>Report&lt;/sub>&lt;/h3>
&lt;p>오픈소스 컴플라이언스 담당은 조치 예정일 내에 내부 조사를 마치고, 요청자에게 결과를 알립니다.&lt;/p>
&lt;ul>
&lt;li>요청자의 문의가 오해로 인한 잘못된 지적이었다면 추가 조치 없이 요청자에게 이를 알리고 처리를 종료합니다.&lt;/li>
&lt;li>문제가 맞는다면 요청자에게 해당 오픈소스 라이선스의 의무를 이행하기 위한 정확한 방법과 시기를 알립니다.&lt;/li>
&lt;/ul>
&lt;h3 id="5-문제-보완--알림subrectifysub">(5) 문제 보완 / 알림&lt;sub>Rectify&lt;/sub>&lt;/h3>
&lt;p>내부조사에서 실제 컴플라이언스 문제가 발견되면 해당 사업 부서는 컴플라이언스 문제를 해결하는 데 필요한 모든 절차를 수행합니다.&lt;/p>
&lt;h3 id="6-문제-해결-알림subreportsub">(6) 문제 해결 알림&lt;sub>Report&lt;/sub>&lt;/h3>
&lt;p>문제를 해결한 후에는 즉시 요청자에게 알리고 문제가 해결되었음을 확인할 수 있는 최선의 방법을 제공합니다.&lt;/p>
&lt;h3 id="7-프로세스-개선subimprovesub">(7) 프로세스 개선&lt;sub>Improve&lt;/sub>&lt;/h3>
&lt;p>컴플라이언스 문제가 있었던 경우, OSRB 미팅을 통해 사례를 검토하고, 문제가 발생한 경위를 파악하여, 문제가 재발하지 않을 수 있도록 프로세스를 개선합니다.&lt;/p>
&lt;h2 id="3-신규-보안취약점-대응-프로세스">3. 신규 보안취약점 대응 프로세스&lt;/h2>
&lt;p>제품/서비스가 시장에 출시된 후 새롭게 보안 취약점이 보고될 경우 위험도에 따라 적절한 조치를 취하기 위해 다음과 같은 프로세스를 준수합니다.&lt;/p>
&lt;p>&lt;img src="securityprocess.png" alt="">&lt;/p>
&lt;h3 id="1-모니터링">(1) 모니터링&lt;/h3>
&lt;p>IT 담당은 새로운 보안 취약점을 모니터링하는 시스템을 구축하여 운영합니다. 이 시스템은 다음과 같은 기능을 수행합니다.&lt;/p>
&lt;ul>
&lt;li>새로운 보안 취약점이 공개되는 것을 주기적으로 수집합니다.&lt;/li>
&lt;li>새로운 알려진 취약점을 갖고 있는 오픈소스가 이미 출시된 제품/서비스에 사용된 경우, 해당 제품/서비스의 사업 부서 담당자에게 알림을 보냅니다. 이때 알림부터 검토, 조치, 해결 사항이 모두 문서화되어 기록될 수 있도록 Jira Issue Tracker를 사용합니다.&lt;/li>
&lt;/ul>
&lt;h3 id="2-초기-대응">(2) 초기 대응&lt;/h3>
&lt;p>보안 담당은 사전 정의한 위험 분류 기준에 따라 사업 부서에 대응 가이드를 제공합니다. 위험은 CVSS(Common Vulnerability Scoring System) 점수로 분류하며, Critical Risk는 1주 이내에 조치할 수 있는 계획을 수립하도록 안내합니다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Risk&lt;/th>
&lt;th style="text-align:center">CVSS 2.0&lt;/th>
&lt;th style="text-align:center">CVSS 3.0&lt;/th>
&lt;th style="text-align:center">조치 권고 일정&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Low&lt;/td>
&lt;td style="text-align:center">0.0 - 3.9&lt;/td>
&lt;td style="text-align:center">0.0 - 3.9&lt;/td>
&lt;td style="text-align:center">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Medium&lt;/td>
&lt;td style="text-align:center">4.0 - 6.9&lt;/td>
&lt;td style="text-align:center">4.0 - 6.9&lt;/td>
&lt;td style="text-align:center">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Hgh&lt;/td>
&lt;td style="text-align:center">7.0 - 10.0&lt;/td>
&lt;td style="text-align:center">7.0 - 8.9&lt;/td>
&lt;td style="text-align:center">4주 이내&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Critical&lt;/td>
&lt;td style="text-align:center">-&lt;/td>
&lt;td style="text-align:center">9.0 - 10.0&lt;/td>
&lt;td style="text-align:center">1주 이내&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>사업 부서는 기존 출시한 제품/서비스에 새로운 보안 취약점이 발견된 경우, 보안 담당자가 제공한 대응 가이드에 따라 조치 계획을 수립합니다.&lt;/p>
&lt;p>보증이 필요한 고객이 있는 경우, 사업 부서는 위험도에 따라 필요한 경우 이메일 등의 방법으로 확인된 알려진 취약점을 고지합니다.&lt;/p>
&lt;h3 id="3-문제-해결">(3) 문제 해결&lt;/h3>
&lt;p>사업 부서는 수립한 조치 계획에 따라 문제가 되는 오픈소스를 삭제하거나 패치된 버전으로 교체하는 등의 방법으로 보안 취약점 문제를 해결합니다. 발견된 모든 이슈를 해결하면, 재검토를 요청합니다.&lt;/p>
&lt;h3 id="4-검토">(4) 검토&lt;/h3>
&lt;p>IT 담당은 오픈소스 분석 도구를 활용하여 문제가 적절하게 해결되었는지 확인합니다.&lt;/p>
&lt;h3 id="5-승인">(5) 승인&lt;/h3>
&lt;p>보안 담당은 심각한 취약점이 모두 해결되었는지 검토합니다. 해결하기 어려운 취약점이 남아 있을 경우, 비즈니스 형태와 서비스 노출 현황 등을 고려하여 승인 여부를 검토합니다.&lt;/p>
&lt;h3 id="6-등록">(6) 등록&lt;/h3>
&lt;p>IT 담당은 오픈소스 보안 취약점이 해결된 SBOM을 시스템에 등록합니다.&lt;/p>
&lt;h3 id="7-고지">(7) 고지&lt;/h3>
&lt;p>오픈소스 프로그램 매니저는 오픈소스 보안 취약점이 해결된 SBOM을 기준으로 오픈소스 고지문을 생성하여 사업 부서에 전달합니다.&lt;/p>
&lt;p>사업 부서는 제품 배포 시 동봉한 오픈소스 고지문을 교체합니다.&lt;/p>
&lt;p>IT 담당은 수정된 오픈소스 고지문을 회사의 오픈소스 배포 사이트에 등록합니다.&lt;/p>
&lt;h3 id="8-배포">(8) 배포&lt;/h3>
&lt;p>사업 부서는 오픈소스 보안 취약점 문제가 해결된 버전의 소프트웨어를 재배포합니다.&lt;/p>
&lt;p>보안 담당은 제3자에게 공개가 필요한 위험 정보가 존재하는지 식별하고, 존재할 경우 IT 담당자에게 전달합니다.&lt;/p>
&lt;p>IT 담당은 신별된 위험에 대한 정보를 오픈소스 웹사이트에 등록하여 제3자가 확인할 수 있게 합니다.&lt;/p></description></item></channel></rss>